diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/handler.S bb-runtimes-gpl-2015-src-patched/arm/sam4s/handler.S
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/handler.S	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/handler.S	2015-07-28 13:59:49.244795210 -0500
@@ -0,0 +1,138 @@
+############################################################################
+#  Copyright (c) 2015, Patrick Noffke                                      #
+#  All rights reserved.                                                    #
+#                                                                          #
+#  Redistribution and use in source and binary forms, with or without      #
+#  modification, are permitted provided that the following conditions are  #
+#  met:                                                                    #
+#                                                                          #
+#  1. Redistributions of source code must retain the above copyright       #
+#  notice, this list of conditions and the following disclaimer.           #
+#                                                                          #
+#  2. Redistributions in binary form must reproduce the above copyright    #
+#  notice, this list of conditions and the following disclaimer in the     #
+#  documentation and/or other materials provided with the distribution.    #
+#                                                                          #
+#  3. Neither the name of the copyright holder nor the names of its        #
+#  contributors may be used to endorse or promote products derived from    #
+#  this software without specific prior written permission.                #
+#                                                                          #
+#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS #
+#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   #
+#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         #
+#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      #
+#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  #
+#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        #
+#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   #
+#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   #
+#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     #
+#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   #
+#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    #
+############################################################################
+
+	.syntax unified
+	.cpu cortex-m4
+	.thumb
+
+	/* Vector table installed by the ravenscar runtime. According to
+	   the arm v7m manual (B1.5.3 The vector table):
+
+	   The Vector table must be naturally aligned to a power of two whose
+	   alignment value is greater than or equal to (Number of Exceptions
+	   supported x 4), with a minimum alignment of 128 bytes.
+
+	   There are 50 entries, and as 50 * 4 = 200 the table should be
+	   aligned to 256 = 2 ** 8. */
+
+	.section .vectors,"a"
+	.globl	__vectors
+	.p2align 8
+__vectors:
+	.word   0                    /* stack top address */
+	.word   fault                /* 1 Reset.  */
+	.word   fault                /* 2 NMI.  */
+	.word   __gnat_hard_fault_trap /* 3 Hard fault. */
+	.word   fault                /* 4 Mem manage.  */
+	.word   fault                /* 5 Bus fault.  */
+	.word   fault                /* 6 Usage fault.  */
+	.word   fault                /* 7 reserved.  */
+	.word   fault                /* 8 reserved.  */
+	.word   fault                /* 9 reserved.  */
+	.word   fault                /* 10 reserved.  */
+	.word   __gnat_sv_call_trap  /* 11 SVCall.  */
+	.word   fault                /* 12 Reserved for Debug.  */
+	.word   fault                /* 13 Reserved.  */
+	.word   __gnat_pend_sv_trap  /* 14 PendSV.  */
+	.word   __gnat_sys_tick_trap /* 15 Systick.  */
+	.word   __gnat_irq_trap      /* 16 IRQ0.  */
+	.word   __gnat_irq_trap      /* 17 IRQ1.  */
+	.word   __gnat_irq_trap      /* 18 IRQ2.  */
+	.word   __gnat_irq_trap      /* 19 IRQ3.  */
+	.word   __gnat_irq_trap      /* 20 IRQ4.  */
+	.word   __gnat_irq_trap      /* 21 IRQ5.  */
+	.word   __gnat_irq_trap      /* 22 IRQ6.  */
+	.word   __gnat_irq_trap      /* 23 IRQ7.  */
+	.word   __gnat_irq_trap      /* 24 IRQ8.  */
+	.word   __gnat_irq_trap      /* 25 IRQ9.  */
+	.word   __gnat_irq_trap      /* 26 IRQ10.  */
+	.word   __gnat_irq_trap      /* 27 IRQ11.  */
+	.word   __gnat_irq_trap      /* 28 IRQ12.  */
+	.word   __gnat_irq_trap      /* 29 IRQ13.  */
+	.word   __gnat_irq_trap      /* 30 IRQ14.  */
+	.word   __gnat_irq_trap      /* 31 IRQ15.  */
+	.word   __gnat_irq_trap      /* 32 IRQ16.  */
+	.word   __gnat_irq_trap      /* 33 IRQ17.  */
+	.word   __gnat_irq_trap      /* 34 IRQ18.  */
+	.word   __gnat_irq_trap      /* 35 IRQ19.  */
+	.word   __gnat_irq_trap      /* 36 IRQ20.  */
+	.word   __gnat_irq_trap      /* 37 IRQ21.  */
+	.word   __gnat_irq_trap      /* 38 IRQ22.  */
+	.word   __gnat_irq_trap      /* 39 IRQ23.  */
+	.word   __gnat_irq_trap      /* 40 IRQ24.  */
+	.word   __gnat_irq_trap      /* 41 IRQ25.  */
+	.word   __gnat_irq_trap      /* 42 IRQ26.  */
+	.word   __gnat_irq_trap      /* 43 IRQ27.  */
+	.word   __gnat_irq_trap      /* 44 IRQ28.  */
+	.word   __gnat_irq_trap      /* 45 IRQ29.  */
+	.word   __gnat_irq_trap      /* 46 IRQ30.  */
+	.word   __gnat_irq_trap      /* 47 IRQ31.  */
+	.word   __gnat_irq_trap      /* 48 IRQ32.  */
+	.word   __gnat_irq_trap      /* 49 IRQ33.  */
+	.word   __gnat_irq_trap      /* 50 IRQ34.  */
+
+	.text
+
+.weak __gnat_irq_trap
+.type __gnat_irq_trap, %function
+__gnat_irq_trap:
+0:	b	0b
+
+	.size __gnat_irq_trap, . - __gnat_irq_trap
+  
+	.thumb_func
+.weak __gnat_hard_fault_trap
+.type __gnat_hard_fault_trap, %function
+__gnat_hard_fault_trap:
+0:	b	0b
+	.size	__gnat_hard_fault_trap, . - __gnat_hard_fault_trap
+  
+	.thumb_func
+.weak ____gnat_sv_call_trap
+.type __gnat_sv_call_trap, %function
+__gnat_sv_call_trap:
+0:	b	0b
+	.size	__gnat_sv_call_trap, . - __gnat_sv_call_trap
+  
+	.thumb_func
+.weak __gnat_pend_sv_trap
+.type __gnat_pend_sv_trap, %function
+__gnat_pend_sv_trap:
+0:	b	0b
+	.size	__gnat_pend_sv_trap, . - __gnat_pend_sv_trap
+
+.weak __gnat_sys_tick_trap
+.type __gnat_sys_tick_trap, %function
+__gnat_sys_tick_trap:
+
+	.thumb_func
+fault:	b	fault
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/runtime.xml bb-runtimes-gpl-2015-src-patched/arm/sam4s/runtime.xml
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/runtime.xml	2014-06-26 05:35:34.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/runtime.xml	2015-07-15 08:54:56.147630296 -0500
@@ -9,8 +9,11 @@
    Loader : Loaders := external ("LOADER", "ROM");
 
    package Compiler is
-      Common_Required_Switches := ("-mlittle-endian", "-msoft-float",
-        "-mcpu=cortex-m4", "-mthumb");
+      Common_Required_Switches := ("-mcpu=cortex-m4", "-mlittle-endian",
+      "-mthumb", "-MD",
+      "-std=c99", "-fmessage-length=0");
+
+      C_Required_Switches :=("-ffreestanding");
 
       for Leading_Required_Switches ("Ada") use
          Compiler'Leading_Required_Switches ("Ada") &amp;
@@ -18,7 +21,8 @@
 
       for Leading_Required_Switches ("C") use
          Compiler'Leading_Required_Switches ("C") &amp;
-         Common_Required_Switches;
+         Common_Required_Switches &amp;
+         C_Required_Switches;
    end Compiler;
 
    package Linker is
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s.ads	2015-07-28 13:53:58.450987867 -0500
@@ -0,0 +1,82 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System; use System;
+
+package SAM4S is
+   pragma Preelaborate;
+
+   --  Base address of peripherals.
+   HSMCI_BASE      : constant Address := System'To_Address (16#4000_0000#);
+   PDC_HSMCI_BASE  : constant Address := System'To_Address (16#4000_0100#);
+   SSC_BASE        : constant Address := System'To_Address (16#4000_4000#);
+   PDC_SSC_BASE    : constant Address := System'To_Address (16#4000_4100#);
+   SPI_BASE        : constant Address := System'To_Address (16#4000_8000#);
+   PDC_SPI_BASE    : constant Address := System'To_Address (16#4000_8100#);
+   TC0_BASE        : constant Address := System'To_Address (16#4001_0000#);
+   TC1_BASE        : constant Address := System'To_Address (16#4001_4000#);
+   TWI0_BASE       : constant Address := System'To_Address (16#4001_8000#);
+   PDC_TWI0_BASE   : constant Address := System'To_Address (16#4001_8100#);
+   TWI1_BASE       : constant Address := System'To_Address (16#4001_C000#);
+   PDC_TWI1_BASE   : constant Address := System'To_Address (16#4001_C100#);
+   PWM_BASE        : constant Address := System'To_Address (16#4002_0000#);
+   PDC_PWM_BASE    : constant Address := System'To_Address (16#4002_0100#);
+   USART0_BASE     : constant Address := System'To_Address (16#4002_4000#);
+   PDC_USART0_BASE : constant Address := System'To_Address (16#4002_4100#);
+   USART1_BASE     : constant Address := System'To_Address (16#4002_8000#);
+   PDC_USART1_BASE : constant Address := System'To_Address (16#4002_8100#);
+   UDP_BASE        : constant Address := System'To_Address (16#4003_4000#);
+   ADC_BASE        : constant Address := System'To_Address (16#4003_8000#);
+   PDC_ADC_BASE    : constant Address := System'To_Address (16#4003_8100#);
+   DACC_BASE       : constant Address := System'To_Address (16#4003_C000#);
+   PDC_DACC_BASE   : constant Address := System'To_Address (16#4003_C100#);
+   ACC_BASE        : constant Address := System'To_Address (16#4004_0000#);
+   CRCCU_BASE      : constant Address := System'To_Address (16#4004_4000#);
+   SMC_BASE        : constant Address := System'To_Address (16#400E_0000#);
+   MATRIX_BASE     : constant Address := System'To_Address (16#400E_0200#);
+   PMC_BASE        : constant Address := System'To_Address (16#400E_0400#);
+   UART0_BASE      : constant Address := System'To_Address (16#400E_0600#);
+   PDC_UART0_BASE  : constant Address := System'To_Address (16#400E_0700#);
+   CHIPID_BASE     : constant Address := System'To_Address (16#400E_0740#);
+   UART1_BASE      : constant Address := System'To_Address (16#400E_0800#);
+   PDC_UART1_BASE  : constant Address := System'To_Address (16#400E_0900#);
+   EEFC0_BASE      : constant Address := System'To_Address (16#400E_0A00#);
+   PIOA_BASE       : constant Address := System'To_Address (16#400E_0E00#);
+   PDC_PIOA_BASE   : constant Address := System'To_Address (16#400E_0F68#);
+   PIOB_BASE       : constant Address := System'To_Address (16#400E_1000#);
+   PIOC_BASE       : constant Address := System'To_Address (16#400E_1200#);
+   RSTC_BASE       : constant Address := System'To_Address (16#400E_1400#);
+   SUPC_BASE       : constant Address := System'To_Address (16#400E_1410#);
+   RTT_BASE        : constant Address := System'To_Address (16#400E_1430#);
+   WDT_BASE        : constant Address := System'To_Address (16#400E_1450#);
+   RTC_BASE        : constant Address := System'To_Address (16#400E_1460#);
+   GPBR_BASE       : constant Address := System'To_Address (16#400E_1490#);
+end SAM4S;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-dacc.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-dacc.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-dacc.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-dacc.adb	2015-07-28 13:58:58.261695229 -0500
@@ -0,0 +1,98 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System.Storage_Elements; use System.Storage_Elements;
+
+package body SAM4S.DACC is
+
+   procedure Reset is
+      DACC_Regs : DACC_Registers with Address => DACC_BASE, Volatile;
+   begin
+      DACC_Regs.CR := CR_SWRST;
+   end Reset;
+
+   procedure Enable_Channel (Channel : Channel_Type) is
+      DACC_Regs : DACC_Registers with Address => DACC_BASE, Volatile;
+   begin
+      DACC_Regs.CHER := Shift_Left (CH_Type (1), Integer (Channel));
+   end Enable_Channel;
+
+   procedure Disable_Channel (Channel : Channel_Type) is
+      DACC_Regs : DACC_Registers with Address => DACC_BASE, Volatile;
+   begin
+      DACC_Regs.CHDR := Shift_Left (CH_Type (1), Integer (Channel));
+   end Disable_Channel;
+
+   procedure Configure (Transfer_Mode     : Transfer_Mode_Type;
+                        Fast_Wake_Up_Mode : Fast_Wake_Up_Mode_Type;
+                        Startup_Value     : Startup_Value_Type;
+                        Max_Speed_Mode    : Max_Speed_Mode_Type) is
+      DACC_Regs : DACC_Registers with Address => DACC_BASE, Volatile;
+      MR_Value : MR_Type := Shift_Left (MR_Type (Startup_Value), 24) or MR_ONE;
+      ACR_Reg : ACR_Type with Address => DACC_BASE + 16#94#, Volatile;
+   begin
+      if Transfer_Mode = Word then
+         MR_Value := MR_Value or MR_WORD;
+      end if;
+
+      if Fast_Wake_Up_Mode = Fast then
+         MR_Value := MR_Value or MR_FASTWKUP;
+      end if;
+
+      if Max_Speed_Mode = Enabled then
+         MR_Value := MR_Value or MR_MAXS;
+      end if;
+
+      DACC_Regs.MR := MR_Value;
+
+      --  Set analog current control.
+      --  IBCTLDACCCORE => 16#01#
+      --  IBCTLCH1 => 16#02#
+      --  IBCTLCH0 => 16#02#
+      ACR_Reg := 16#0000_0105#;
+   end Configure;
+
+   procedure Put (Channel : Channel_Type;
+                  Data    : Conversion_Data_Type) is
+      DACC_Regs : DACC_Registers with Address => DACC_BASE, Volatile;
+   begin
+      --  Select the channel using the USER_SEL field.
+      if Channel = 0 then
+         DACC_Regs.MR := DACC_Regs.MR and (not MR_USER_SEL);
+      else
+         DACC_Regs.MR := DACC_Regs.MR or MR_USER_SEL;
+      end if;
+
+      --  Now write the data.
+      DACC_Regs.CDR := Data;
+   end Put;
+
+end SAM4S.DACC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-dacc.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-dacc.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-dacc.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-dacc.ads	2015-07-28 13:58:47.341887999 -0500
@@ -0,0 +1,101 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.DACC is
+   pragma Preelaborate;
+
+   type Channel_Type is range 0 .. 1;
+
+   type Transfer_Mode_Type is (Half_Word, Word);
+
+   type Fast_Wake_Up_Mode_Type is (Normal, Fast);
+
+   type Startup_Value_Type is range 0 .. 63 with Size => 32;
+
+   type Max_Speed_Mode_Type is (Disabled, Enabled);
+
+   type Conversion_Data_Type is range 0 .. 2**12 - 1 with Size => 32;
+
+   type Interrupt_Type is new Unsigned_32;
+   Interrupt_TXRDY   : constant Interrupt_Type := 16#0000_0001#;
+   Interrupt_EOC     : constant Interrupt_Type := 16#0000_0002#;
+   Interrupt_ENDTX   : constant Interrupt_Type := 16#0000_0004#;
+   Interrupt_TXBUFE  : constant Interrupt_Type := 16#0000_0008#;
+   Interrupt_All     : constant Interrupt_Type := 16#0000_000F#;
+
+   procedure Reset;
+
+   procedure Configure (Transfer_Mode     : Transfer_Mode_Type;
+                        Fast_Wake_Up_Mode : Fast_Wake_Up_Mode_Type;
+                        Startup_Value     : Startup_Value_Type;
+                        Max_Speed_Mode    : Max_Speed_Mode_Type);
+
+   procedure Enable_Channel (Channel : Channel_Type);
+
+   procedure Disable_Channel (Channel : Channel_Type);
+
+   procedure Put (Channel : Channel_Type;
+                  Data    : Conversion_Data_Type);
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_SWRST  : constant CR_Type := 16#0000_0001#;
+
+   type CH_Type is new Unsigned_32;
+
+   type MR_Type is new Unsigned_32;
+   MR_WORD          : constant MR_Type := 16#0000_0010#;
+   MR_SLEEP         : constant MR_Type := 16#0000_0020#;
+   MR_FASTWKUP      : constant MR_Type := 16#0000_0040#;
+   MR_ONE           : constant MR_Type := 16#0000_0100#;
+   MR_USER_SEL      : constant MR_Type := 16#0001_0000#;
+   MR_MAXS          : constant MR_Type := 16#0020_0000#;
+
+   type ACR_Type is new Unsigned_32;
+
+   type DACC_Registers is record
+      CR          : CR_Type;        -- Control register
+      MR          : MR_Type;        -- Mode register
+      Reserved_08 : Unsigned_32;    -- 0x08
+      Reserved_0C : Unsigned_32;    -- 0x0C
+      CHER        : CH_Type;        -- Channel enable register
+      CHDR        : CH_Type;        -- Channel disable register
+      CHSR        : CH_Type;        -- Channel status register
+      Reserved_1C : Unsigned_32;    -- 0x1C
+      CDR         : Conversion_Data_Type; -- Conversion data register
+      IER         : Interrupt_Type; -- Interrupt enable register
+      IDR         : Interrupt_Type; -- Interrupt disable register
+      IMR         : Interrupt_Type; -- Interrupt mask register
+      ISR         : Interrupt_Type; -- Interrupt status register
+   end record;
+end SAM4S.DACC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-eefc.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-eefc.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-eefc.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-eefc.adb	2015-07-28 13:58:41.453991939 -0500
@@ -0,0 +1,38 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+package body SAM4S.EEFC is
+   procedure Set_Wait_States (Wait_States : Wait_State_Type) is
+      EEFC_Regs : EEFC_Registers with Address => EEFC0_BASE, Volatile;
+   begin
+      EEFC_Regs.FMR := Shift_Left (Unsigned_32 (Wait_States), 8) or FMR_CLOE;
+   end Set_Wait_States;
+end SAM4S.EEFC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-eefc.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-eefc.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-eefc.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-eefc.ads	2015-07-28 13:58:35.094104212 -0500
@@ -0,0 +1,52 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.EEFC is
+   pragma Preelaborate;
+
+   type Wait_State_Type is new Integer range 0 .. 15;
+
+   procedure Set_Wait_States (Wait_States : Wait_State_Type);
+
+private
+   FWS_Mask : constant Unsigned_32 := 16#0000_0F00#;
+   FMR_CLOE : constant Unsigned_32 := 16#0400_0000#;
+
+   type EEFC_Registers is record
+      FMR           : Unsigned_32; -- Flash mode register
+      FCR           : Unsigned_32; -- Flash command register
+      FSR           : Unsigned_32; -- Flash status register
+      FRR           : Unsigned_32; -- Flash result register
+   end record;
+
+end SAM4S.EEFC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pdc.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pdc.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pdc.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pdc.adb	2015-07-28 13:58:27.839232284 -0500
@@ -0,0 +1,111 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System.Storage_Elements; use System.Storage_Elements;
+
+package body SAM4S.PDC is
+
+   procedure Configure_Current_Rx (Periph_Base_Addr : System.Address;
+                                   Destination_Addr : System.Address;
+                                   Count            : Receive_Count_Type) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.RPR := Destination_Addr;
+      PDC_Regs.RCR := Count;
+   end Configure_Current_Rx;
+
+   procedure Configure_Next_Rx (Periph_Base_Addr : System.Address;
+                                Destination_Addr : System.Address;
+                                Count            : Receive_Count_Type) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.RNPR := Destination_Addr;
+      PDC_Regs.RNCR := Count;
+   end Configure_Next_Rx;
+
+   procedure Configure_Current_Tx (Periph_Base_Addr : System.Address;
+                                   Source_Addr      : System.Address;
+                                   Count            : Transmit_Count_Type) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.TPR := Source_Addr;
+      PDC_Regs.TCR := Count;
+   end Configure_Current_Tx;
+
+   procedure Configure_Next_Tx (Periph_Base_Addr : System.Address;
+                                Source_Addr      : System.Address;
+                                Count            : Transmit_Count_Type)
+   is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.TNPR := Source_Addr;
+      PDC_Regs.TNCR := Count;
+   end Configure_Next_Tx;
+
+   procedure Enable_Rx (Periph_Base_Addr : System.Address) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.PTCR := PTCR_RXTEN;
+   end Enable_Rx;
+
+   procedure Disable_Rx (Periph_Base_Addr : System.Address) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.PTCR := PTCR_RXTDIS;
+   end Disable_Rx;
+
+   procedure Enable_Tx (Periph_Base_Addr : System.Address) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.PTCR := PTCR_TXTEN;
+   end Enable_Tx;
+
+   procedure Disable_Tx (Periph_Base_Addr : System.Address) is
+      PDC_Regs : PDC_Registers with
+        Address => PDC_Regs_Addr (Periph_Base_Addr), Volatile;
+   begin
+      PDC_Regs.PTCR := PTCR_TXTDIS;
+   end Disable_Tx;
+
+   function PDC_Regs_Addr (Periph_Base_Addr : System.Address)
+                          return System.Address is
+   begin
+      return Periph_Base_Addr + 16#0100#;
+   end PDC_Regs_Addr;
+
+end SAM4S.PDC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pdc.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pdc.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pdc.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pdc.ads	2015-07-28 13:58:20.255366164 -0500
@@ -0,0 +1,90 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.PDC is
+   pragma Preelaborate;
+
+   type Receive_Count_Type is new Unsigned_32;
+   type Transmit_Count_Type is new Unsigned_32;
+
+   procedure Configure_Current_Rx (Periph_Base_Addr : System.Address;
+                                   Destination_Addr : System.Address;
+                                   Count            : Receive_Count_Type);
+
+   procedure Configure_Next_Rx (Periph_Base_Addr : System.Address;
+                                Destination_Addr : System.Address;
+                                Count            : Receive_Count_Type);
+
+   procedure Configure_Current_Tx (Periph_Base_Addr : System.Address;
+                                   Source_Addr      : System.Address;
+                                   Count            : Transmit_Count_Type);
+
+   procedure Configure_Next_Tx (Periph_Base_Addr : System.Address;
+                                Source_Addr      : System.Address;
+                                Count            : Transmit_Count_Type);
+
+   procedure Enable_Rx (Periph_Base_Addr : System.Address);
+
+   procedure Disable_Rx (Periph_Base_Addr : System.Address);
+
+   procedure Enable_Tx (Periph_Base_Addr : System.Address);
+
+   procedure Disable_Tx (Periph_Base_Addr : System.Address);
+
+private
+   function PDC_Regs_Addr (Periph_Base_Addr : System.Address)
+                          return System.Address;
+
+   type PTCR_Type is new Unsigned_32;
+   PTCR_RXTEN  : constant PTCR_Type := 16#0000_0001#;
+   PTCR_RXTDIS : constant PTCR_Type := 16#0000_0002#;
+   PTCR_TXTEN  : constant PTCR_Type := 16#0000_0100#;
+   PTCR_TXTDIS : constant PTCR_Type := 16#0000_0200#;
+
+   type PTSR_Type is new Unsigned_32;
+   PTSR_RXTEN  : constant PTSR_Type := 16#0000_0001#;
+   PTSR_TXTEN  : constant PTSR_Type := 16#0000_0100#;
+
+   type PDC_Registers is record
+      RPR           : System.Address;      -- Receive pointer register.
+      RCR           : Receive_Count_Type;  -- Receive counter register.
+      TPR           : System.Address;      -- Transmit pointer register.
+      TCR           : Transmit_Count_Type; -- Transmit counter register.
+      RNPR          : System.Address;      -- Receive next pointer register.
+      RNCR          : Receive_Count_Type;  -- Receive next counter register.
+      TNPR          : System.Address;      -- Transmit next pointer register.
+      TNCR          : Transmit_Count_Type; -- Transmit next counter register.
+      PTCR          : PTCR_Type;           -- Transfer control register.
+      PTSR          : PTSR_Type;           -- Transfer status register.
+   end record;
+end SAM4S.PDC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pio.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pio.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pio.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pio.adb	2015-07-28 13:58:12.791497926 -0500
@@ -0,0 +1,155 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+package body SAM4S.PIO is
+   procedure Configure_Pin (Pin              : Pin_Type;
+                            Multiplex_Select : Multiplex_Select_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin), Volatile;
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      case Multiplex_Select is
+         when Input =>
+            PIO_Regs.ODR := Pin_Mask;
+            PIO_Regs.PER := Pin_Mask;
+         when Output_0 =>
+            --  Clear pin.
+            PIO_Regs.CODR := Pin_Mask;
+
+            PIO_Regs.OER := Pin_Mask;
+            PIO_Regs.PER := Pin_Mask;
+         when Output_1 =>
+            --  Set pin.
+            PIO_Regs.SODR := Pin_Mask;
+
+            PIO_Regs.ODR := Pin_Mask;
+            PIO_Regs.PER := Pin_Mask;
+         when Periph_A =>
+            PIO_Regs.ABCDSR1 := PIO_Regs.ABCDSR1 and
+              ((not Pin_Mask) and PIO_Regs.ABCDSR1);
+            PIO_Regs.ABCDSR2 := PIO_Regs.ABCDSR2 and
+              ((not Pin_Mask) and PIO_Regs.ABCDSR2);
+            PIO_Regs.PDR := Pin_Mask;
+         when Periph_B =>
+            PIO_Regs.ABCDSR1 := PIO_Regs.ABCDSR1 or Pin_Mask;
+            PIO_Regs.ABCDSR2 := PIO_Regs.ABCDSR2 and
+              ((not Pin_Mask) and PIO_Regs.ABCDSR2);
+            PIO_Regs.PDR := Pin_Mask;
+         when Periph_C =>
+            PIO_Regs.ABCDSR1 := PIO_Regs.ABCDSR1 and
+              ((not Pin_Mask) and PIO_Regs.ABCDSR1);
+            PIO_Regs.ABCDSR2 := PIO_Regs.ABCDSR2 or Pin_Mask;
+            PIO_Regs.PDR := Pin_Mask;
+         when Periph_D =>
+            PIO_Regs.ABCDSR1 := PIO_Regs.ABCDSR1 or Pin_Mask;
+            PIO_Regs.ABCDSR2 := PIO_Regs.ABCDSR2 or Pin_Mask;
+            PIO_Regs.PDR := Pin_Mask;
+      end case;
+   end Configure_Pin;
+
+   procedure Enable_Pull_Up (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.PUER := Pin_Mask;
+   end Enable_Pull_Up;
+
+   procedure Disable_Pull_Up (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.PUDR := Pin_Mask;
+   end Disable_Pull_Up;
+
+   procedure Enable_Pull_Down (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.PPDER := Pin_Mask;
+   end Enable_Pull_Down;
+
+   procedure Disable_Pull_Down (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.PPDDR := Pin_Mask;
+   end Disable_Pull_Down;
+
+   procedure Set_Pin (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.SODR := Pin_Mask;
+   end Set_Pin;
+
+   procedure Clear_Pin (Pin : Pin_Type) is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin);
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      PIO_Regs.CODR := Pin_Mask;
+   end Clear_Pin;
+
+   function Is_Pin_Set (Pin : Pin_Type) return Boolean is
+      PIO_Regs : PIO_Registers with Address => PIO_Base_Addr (Pin), Volatile;
+      Pin_Mask : constant Unsigned_32 := Pin_To_Mask (Pin);
+   begin
+      return (PIO_Regs.PDSR and Pin_Mask) /= 0;
+   end Is_Pin_Set;
+
+   function Pin_To_Mask (Pin : Pin_Type) return Unsigned_32 is
+   begin
+      case Pin is
+         when PA0 .. PA31 =>
+            return Shift_Left (16#0000_0001#,
+                               Integer (Pin_Type'Pos (Pin) -
+                                          Pin_Type'Pos (PA0)));
+         when PB0 .. PB31 =>
+            return Shift_Left (16#0000_0001#,
+                               Integer (Pin_Type'Pos (Pin) -
+                                          Pin_Type'Pos (PB0)));
+         when PC0 .. PC31 =>
+            return Shift_Left (16#0000_0001#,
+                               Integer (Pin_Type'Pos (Pin) -
+                                          Pin_Type'Pos (PC0)));
+      end case;
+   end Pin_To_Mask;
+
+   function PIO_Base_Addr (Pin : Pin_Type) return System.Address is
+   begin
+      case Pin is
+         when PA0 .. PA31 =>
+            return PIOA_BASE;
+         when PB0 .. PB31 =>
+            return PIOB_BASE;
+         when PC0 .. PC31 =>
+            return PIOC_BASE;
+      end case;
+   end PIO_Base_Addr;
+end SAM4S.PIO;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pio.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pio.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pio.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pio.ads	2015-07-28 13:58:05.510626457 -0500
@@ -0,0 +1,120 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.PIO is
+   pragma Preelaborate;
+
+   type Pin_Type is
+     (PA0,  PA1,  PA2,  PA3,  PA4,  PA5,  PA6,  PA7,
+      PA8,  PA9,  PA10, PA11, PA12, PA13, PA14, PA15,
+      PA16, PA17, PA18, PA19, PA20, PA21, PA22, PA23,
+      PA24, PA25, PA26, PA27, PA28, PA29, PA30, PA31,
+      PB0,  PB1,  PB2,  PB3,  PB4,  PB5,  PB6,  PB7,
+      PB8,  PB9,  PB10, PB11, PB12, PB13, PB14, PB15,
+      PB16, PB17, PB18, PB19, PB20, PB21, PB22, PB23,
+      PB24, PB25, PB26, PB27, PB28, PB29, PB30, PB31,
+      PC0,  PC1,  PC2,  PC3,  PC4,  PC5,  PC6,  PC7,
+      PC8,  PC9,  PC10, PC11, PC12, PC13, PC14, PC15,
+      PC16, PC17, PC18, PC19, PC20, PC21, PC22, PC23,
+      PC24, PC25, PC26, PC27, PC28, PC29, PC30, PC31
+     );
+
+   type Multiplex_Select_Type is (Input, Output_0, Output_1,
+                                  Periph_A, Periph_B, Periph_C, Periph_D);
+
+   procedure Configure_Pin (Pin              : Pin_Type;
+                            Multiplex_Select : Multiplex_Select_Type);
+
+   procedure Enable_Pull_Up (Pin : Pin_Type);
+
+   procedure Disable_Pull_Up (Pin : Pin_Type);
+
+   procedure Enable_Pull_Down (Pin : Pin_Type);
+
+   procedure Disable_Pull_Down (Pin : Pin_Type);
+
+   procedure Set_Pin (Pin : Pin_Type);
+
+   procedure Clear_Pin (Pin : Pin_Type);
+
+   function Is_Pin_Set (Pin : Pin_Type) return Boolean;
+
+private
+   function PIO_Base_Addr (Pin : Pin_Type) return System.Address;
+
+   function Pin_To_Mask (Pin : Pin_Type) return Unsigned_32;
+
+   type PIO_Registers is record
+      PER           : Unsigned_32; -- PIO enable register
+      PDR           : Unsigned_32; -- PIO disable register
+      PSR           : Unsigned_32; -- PIO status register
+      Reserved_0    : Unsigned_32;
+      OER           : Unsigned_32; -- Output enable register
+      ODR           : Unsigned_32; -- Output disable register
+      OSR           : Unsigned_32; -- Output status register
+      Reserved_1    : Unsigned_32;
+      IFER          : Unsigned_32; -- Glitch input filter enable register
+      IFDR          : Unsigned_32; -- Glitch input filter disable register
+      IFSR          : Unsigned_32; -- Glitch input filter status register
+      Reserved_2    : Unsigned_32;
+      SODR          : Unsigned_32; -- Set output data register
+      CODR          : Unsigned_32; -- Clear output data register
+      ODSR          : Unsigned_32; -- Output data status register
+      PDSR          : Unsigned_32; -- Pin data status register
+      IER           : Unsigned_32; -- Interrupt enable register
+      IDR           : Unsigned_32; -- Interrupt disable register
+      IMR           : Unsigned_32; -- Interrupt mask register
+      ISR           : Unsigned_32; -- Interrupt status register
+      MDER          : Unsigned_32; -- Multi-driver enable register
+      MDDR          : Unsigned_32; -- Multi-driver disable register
+      MDSR          : Unsigned_32; -- Multi-driver status register
+      Reserved_3    : Unsigned_32;
+      PUDR          : Unsigned_32; -- Pull-up disable register
+      PUER          : Unsigned_32; -- Pull-up enable register
+      PUSR          : Unsigned_32; -- Pull-up status register
+      Reserved_4    : Unsigned_32;
+      ABCDSR1       : Unsigned_32; -- Peripheral select register 1
+      ABCDSR2       : Unsigned_32; -- Peripheral select register 2
+      Reserved_5    : Unsigned_32;
+      Reserved_6    : Unsigned_32;
+      IFSCER        : Unsigned_32; -- Input filter slow clock enable register
+      IFSCDR        : Unsigned_32; -- Input filter slow clock disable register
+      IFSCSR        : Unsigned_32; -- Input filter slow clock status register
+      Reserved_7    : Unsigned_32;
+      PPDDR         : Unsigned_32; -- Pull-down disable register
+      PPDER         : Unsigned_32; -- Pull-down enable register
+      PPDSR         : Unsigned_32; -- Pull-down status register
+      Reserved_8    : Unsigned_32;
+      --  TODO:  Add remaining register definitions.
+   end record;
+end SAM4S.PIO;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pmc.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pmc.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pmc.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pmc.adb	2015-07-28 13:57:57.582766410 -0500
@@ -0,0 +1,131 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with SAM4S.EEFC;
+
+package body SAM4S.PMC is
+   procedure Peripheral_Clock_Enable (Peripheral : Peripheral_ID_Type) is
+      PMC_Regs : PMC_Registers
+        with Address => PMC_BASE;
+   begin
+      if Peripheral < ID_CRCCU then
+         PMC_Regs.PCER0 := Shift_Left (16#0000_0001#, Integer (Peripheral));
+      else
+         PMC_Regs.PCER1 := Shift_Left (16#0000_0001#,
+                                       Integer (Peripheral - ID_CRCCU));
+      end if;
+   end Peripheral_Clock_Enable;
+
+   procedure Peripheral_Clock_Disable (Peripheral : Peripheral_ID_Type) is
+      PMC_Regs : PMC_Registers
+        with Address => PMC_BASE;
+   begin
+      if Peripheral < ID_CRCCU then
+         PMC_Regs.PCDR0 := Shift_Left (16#0000_0001#, Integer (Peripheral));
+      else
+         PMC_Regs.PCDR1 := Shift_Left (16#0000_0001#,
+                                       Integer (Peripheral - ID_CRCCU));
+      end if;
+   end Peripheral_Clock_Disable;
+
+   procedure Switch_To_Main_Xtal is
+      --  MOSCXTST = (startup us) * (slow clock freq) / 8 / 1000000.
+      --  MOSCXTST = 15625 us * 32000 / 8 / 1000 = 62.
+      MOSCXTST : constant CKGR_MOR_Type := 62;
+      PMC_Regs : PMC_Registers with Address => PMC_BASE, Volatile;
+   begin
+      --  Set flash wait state to max.
+      SAM4S.EEFC.Set_Wait_States (5);
+
+      --  Enable the crystal and set the startup time.
+      PMC_Regs.CKGR_MOR := (PMC_Regs.CKGR_MOR and (not CKGR_MOR_MOSCXTBY)) or
+        CKGR_MOR_KEY_PASSWD or CKGR_MOR_MOSCXTEN or Shift_Left (MOSCXTST, 8);
+
+      --  Wait for the XTAL to stabilize.
+      while (PMC_Regs.SR and SR_MOSCXTS) = 0 loop
+         null;
+      end loop;
+
+      --  Select the main crystal oscillator.
+      PMC_Regs.CKGR_MOR := PMC_Regs.CKGR_MOR or
+        CKGR_MOR_KEY_PASSWD or CKGR_MOR_MOSCSEL;
+
+      --  Wait for the main oscillator selection to finish.
+      while (PMC_Regs.SR and SR_MOSCSELS) = 0 loop
+         null;
+      end loop;
+
+   end Switch_To_Main_Xtal;
+
+   procedure Switch_To_Main_PLL is
+      PMC_Regs : PMC_Registers with Address => PMC_BASE, Volatile;
+      --  Desired MCK is 120 MHz, so we use a multipler of 10 (MULA = 9) and
+      --  a divisor of 1 (DIVA = 1).
+      MULA : constant CKGR_PLL_Type := Shift_Left (9, 16);
+      DIVA : constant CKGR_PLL_Type := 1;
+      COUNT : constant CKGR_PLL_Type := Shift_Left (16#3F#, 8);
+   begin
+      --  First disable PLLA.
+      PMC_Regs.CKGR_PLLAR := CKGR_PLLA_ONE;
+
+      --  Set multiplier, divisor, and count fields.
+      PMC_Regs.CKGR_PLLAR := CKGR_PLLA_ONE or MULA or DIVA or COUNT;
+
+      --  Wait for lock.
+      while (PMC_Regs.SR and SR_LOCKA) = 0 loop
+         null;
+      end loop;
+
+      --  Set the prescalar to 1 (PRES = 0).
+      PMC_Regs.MCKR := (PMC_Regs.MCKR and (not MCKR_PRES_Mask)) or
+        MCKR_PRES_CLK_1;
+
+      --  Wait for MCK to be ready.
+      while (PMC_Regs.SR and SR_MCKRDY) = 0 loop
+         null;
+      end loop;
+
+      --  Switch MCK to PLLA;
+      PMC_Regs.MCKR := (PMC_Regs.MCKR and (not MCKR_CSS_Mask)) or
+        MCKR_CSS_PLLA_CLK;
+
+      --  Wait for MCK to be ready.
+      while (PMC_Regs.SR and SR_MCKRDY) = 0 loop
+         null;
+      end loop;
+   end Switch_To_Main_PLL;
+
+   function MCK return Integer is
+   begin
+      --  TODO:  Determine the actual MCK frequency.
+      return 120_000_000;
+   end MCK;
+end SAM4S.PMC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pmc.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pmc.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pmc.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pmc.ads	2015-07-28 13:57:50.478891816 -0500
@@ -0,0 +1,200 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.PMC is
+   pragma Preelaborate;
+
+   --  Peripheral IDs.
+   type Peripheral_ID_Type is new Natural range 0 .. 34;
+
+   ID_SUPC   : constant Peripheral_ID_Type := 0;
+   ID_RSTC   : constant Peripheral_ID_Type := 1;
+   ID_RTC    : constant Peripheral_ID_Type := 2;
+   ID_RTT    : constant Peripheral_ID_Type := 3;
+   ID_WDT    : constant Peripheral_ID_Type := 4;
+   ID_PMC    : constant Peripheral_ID_Type := 5;
+   ID_EEFC0  : constant Peripheral_ID_Type := 6;
+   --  ID_RSVD7  : constant Peripheral_ID_Type := 7;
+   ID_UART0  : constant Peripheral_ID_Type := 8;
+   ID_UART1  : constant Peripheral_ID_Type := 9;
+   ID_SMC    : constant Peripheral_ID_Type := 10;
+   ID_PIOA   : constant Peripheral_ID_Type := 11;
+   ID_PIOB   : constant Peripheral_ID_Type := 12;
+   ID_PIOC   : constant Peripheral_ID_Type := 13;
+   ID_USART0 : constant Peripheral_ID_Type := 14;
+   ID_USART1 : constant Peripheral_ID_Type := 15;
+   --  ID_RSVD16 : constant Peripheral_ID_Type := 16;
+   --  ID_RSVD17 : constant Peripheral_ID_Type := 17;
+   ID_HSMCI  : constant Peripheral_ID_Type := 18;
+   ID_TWI0   : constant Peripheral_ID_Type := 19;
+   ID_TWI1   : constant Peripheral_ID_Type := 20;
+   ID_SPI    : constant Peripheral_ID_Type := 21;
+   ID_SSC    : constant Peripheral_ID_Type := 22;
+   ID_TC0    : constant Peripheral_ID_Type := 23;
+   ID_TC1    : constant Peripheral_ID_Type := 24;
+   ID_TC2    : constant Peripheral_ID_Type := 25;
+   ID_TC3    : constant Peripheral_ID_Type := 26;
+   ID_TC4    : constant Peripheral_ID_Type := 27;
+   ID_TC5    : constant Peripheral_ID_Type := 28;
+   ID_ADC    : constant Peripheral_ID_Type := 29;
+   ID_DACC   : constant Peripheral_ID_Type := 30;
+   ID_PWM    : constant Peripheral_ID_Type := 31;
+   ID_CRCCU  : constant Peripheral_ID_Type := 32;
+   ID_ACC    : constant Peripheral_ID_Type := 33;
+   ID_UDP    : constant Peripheral_ID_Type := 34;
+
+   procedure Peripheral_Clock_Enable (Peripheral : Peripheral_ID_Type);
+
+   procedure Peripheral_Clock_Disable (Peripheral : Peripheral_ID_Type);
+
+   procedure Switch_To_Main_Xtal;
+
+   procedure Switch_To_Main_PLL;
+
+   function MCK return Integer;
+
+private
+   type CKGR_MOR_Type is new Unsigned_32;
+   CKGR_MOR_MOSCXTEN   : constant CKGR_MOR_Type := 16#0000_0001#;
+   CKGR_MOR_MOSCXTBY   : constant CKGR_MOR_Type := 16#0000_0002#;
+   CKGR_MOR_WAITMODE   : constant CKGR_MOR_Type := 16#0000_0004#;
+   CKGR_MOR_MOSCRCEN   : constant CKGR_MOR_Type := 16#0000_0008#;
+   CKGR_MOR_KEY_PASSWD : constant CKGR_MOR_Type := 16#0037_0000#;
+   CKGR_MOR_MOSCSEL    : constant CKGR_MOR_Type := 16#0100_0000#;
+   CKGR_MOR_CFDEN      : constant CKGR_MOR_Type := 16#0200_0000#;
+
+   type CKGR_PLL_Type is new Unsigned_32;
+   CKGR_PLLA_ONE       : constant CKGR_PLL_Type := 16#2000_0000#;
+
+   type MCKR_Type is new Unsigned_32;
+   MCKR_CSS_Mask       : constant MCKR_Type := 16#0000_0003#;
+   MCKR_CSS_SLOW_CLK   : constant MCKR_Type := 16#0000_0000#;
+   MCKR_CSS_MAIN_CLK   : constant MCKR_Type := 16#0000_0001#;
+   MCKR_CSS_PLLA_CLK   : constant MCKR_Type := 16#0000_0002#;
+   MCKR_CSS_PLLB_CLK   : constant MCKR_Type := 16#0000_0003#;
+   MCKR_PRES_Mask      : constant MCKR_Type := 16#0000_0070#;
+   MCKR_PRES_CLK_1     : constant MCKR_Type := 16#0000_0000#;
+   MCKR_PRES_CLK_2     : constant MCKR_Type := 16#0000_0010#;
+   MCKR_PRES_CLK_4     : constant MCKR_Type := 16#0000_0020#;
+   MCKR_PRES_CLK_8     : constant MCKR_Type := 16#0000_0030#;
+   MCKR_PRES_CLK_16    : constant MCKR_Type := 16#0000_0040#;
+   MCKR_PRES_CLK_32    : constant MCKR_Type := 16#0000_0050#;
+   MCKR_PRES_CLK_64    : constant MCKR_Type := 16#0000_0060#;
+   MCKR_PRES_CLK_3     : constant MCKR_Type := 16#0000_0070#;
+
+   type SR_Type is new Unsigned_32;
+   SR_MOSCXTS          : constant SR_Type := 16#0000_0001#;
+   SR_LOCKA            : constant SR_Type := 16#0000_0002#;
+   SR_LOCKB            : constant SR_Type := 16#0000_0004#;
+   SR_MCKRDY           : constant SR_Type := 16#0000_0008#;
+   SR_OSCSELS          : constant SR_Type := 16#0000_0080#;
+   SR_PCKRDY0          : constant SR_Type := 16#0000_0100#;
+   SR_PCKRDY1          : constant SR_Type := 16#0000_0200#;
+   SR_PCKRDY2          : constant SR_Type := 16#0000_0400#;
+   SR_MOSCSELS         : constant SR_Type := 16#0001_0000#;
+   SR_MOSCRCS          : constant SR_Type := 16#0002_0000#;
+   SR_CFDEV            : constant SR_Type := 16#0004_0000#;
+   SR_CFDS             : constant SR_Type := 16#0008_0000#;
+   SR_FOS              : constant SR_Type := 16#0010_0000#;
+
+   type PMC_Registers is record
+      SCER          : Unsigned_32;   -- System clock enable register
+      SCDR          : Unsigned_32;   -- System clock disable register
+      SCSR          : Unsigned_32;   -- System clock status register
+      Reserved_0    : Unsigned_32;
+      PCER0         : Unsigned_32;   -- Peripheral clock enable register 0
+      PCDR0         : Unsigned_32;   -- Peripheral clock disable register 0
+      PCSR0         : Unsigned_32;   -- Peripheral clock status register 0
+      Reserved_1    : Unsigned_32;
+      CKGR_MOR      : CKGR_MOR_Type; -- Main oscillator register
+      CKGR_MCFR     : Unsigned_32;   -- Main clock frequency register
+      CKGR_PLLAR    : CKGR_PLL_Type; -- PLLA register
+      CKGR_PLLBR    : CKGR_PLL_Type; -- PLLB register
+      MCKR          : MCKR_Type;     -- Master clock register
+      Reserved_2    : Unsigned_32;
+      USB           : Unsigned_32;   -- USB clock register
+      Reserved_3    : Unsigned_32;
+      PCK0          : Unsigned_32;   -- Programmable clock 0 register
+      PCK1          : Unsigned_32;   -- Programmable clock 1 register
+      PCK2          : Unsigned_32;   -- Programmable clock 2 register
+      Reserved_4    : Unsigned_32;
+      Reserved_5    : Unsigned_32;
+      Reserved_6    : Unsigned_32;
+      Reserved_7    : Unsigned_32;
+      Reserved_8    : Unsigned_32;
+      IER           : Unsigned_32;   -- Interrupt enable register
+      IDR           : Unsigned_32;   -- Interrupt enable register
+      SR            : SR_Type;       -- Status register
+      IMR           : Unsigned_32;   -- Interrupt mask register
+      FSMR          : Unsigned_32;   -- Fast start-up mode register
+      FSPR          : Unsigned_32;   -- Fast start-up polarity register
+      FOCR          : Unsigned_32;   -- Fault output clear register
+      Reserved_9    : Unsigned_32;   -- 0x007C
+      Reserved_10   : Unsigned_32;   -- 0x0080
+      Reserved_11   : Unsigned_32;
+      Reserved_12   : Unsigned_32;
+      Reserved_13   : Unsigned_32;
+      Reserved_14   : Unsigned_32;   -- 0x0090
+      Reserved_15   : Unsigned_32;
+      Reserved_16   : Unsigned_32;
+      Reserved_17   : Unsigned_32;
+      Reserved_18   : Unsigned_32;   -- 0x00A0
+      Reserved_19   : Unsigned_32;
+      Reserved_20   : Unsigned_32;
+      Reserved_21   : Unsigned_32;
+      Reserved_22   : Unsigned_32;   -- 0x00B0
+      Reserved_23   : Unsigned_32;
+      Reserved_24   : Unsigned_32;
+      Reserved_25   : Unsigned_32;
+      Reserved_26   : Unsigned_32;   -- 0x00C0
+      Reserved_27   : Unsigned_32;
+      Reserved_28   : Unsigned_32;
+      Reserved_29   : Unsigned_32;
+      Reserved_30   : Unsigned_32;   -- 0x00D0
+      Reserved_31   : Unsigned_32;
+      Reserved_32   : Unsigned_32;
+      Reserved_33   : Unsigned_32;
+      Reserved_34   : Unsigned_32;   -- 0x00E0
+      WPMR          : Unsigned_32;   -- Write protection mode register
+      WPSR          : Unsigned_32;   -- Write protection status register
+      Reserved_35   : Unsigned_32;
+      Reserved_36   : Unsigned_32;   -- 0x00F0
+      Reserved_37   : Unsigned_32;
+      Reserved_38   : Unsigned_32;
+      Reserved_39   : Unsigned_32;
+      PCER1         : Unsigned_32;   -- Peripheral clock enable register 1
+      PCDR1         : Unsigned_32;   -- Peripheral clock disable register 1
+      PCSR1         : Unsigned_32;   -- Peripheral clock status register 1
+   end record;
+
+end SAM4S.PMC;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pwm.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pwm.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pwm.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pwm.adb	2015-07-28 13:57:42.271036712 -0500
@@ -0,0 +1,167 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System.Storage_Elements; use System.Storage_Elements;
+
+package body SAM4S.PWM is
+   procedure Enable_Channel (Channel : Channel_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      PWM_Regs.ENA := Shift_Left (16#0000_0001#, Channel_Type'Pos (Channel));
+   end Enable_Channel;
+
+   procedure Disable_Channel (Channel : Channel_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      PWM_Regs.DIS := Shift_Left (16#0000_0001#, Channel_Type'Pos (Channel));
+   end Disable_Channel;
+
+   procedure Set_Divider_Clock_Source (Clock  : Divider_Clock_Type;
+                                       Source : Divider_Clock_Source_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      case Clock is
+         when CLKA =>
+            PWM_Regs.CLK := (PWM_Regs.CLK and 16#FFFF_F0FF#) or
+              Shift_Left (Unsigned_32 (Divider_Clock_Source_Type'Pos (Source)),
+                                       8);
+         when CLKB =>
+            PWM_Regs.CLK := (PWM_Regs.CLK and 16#F0FF_FFFF#) or
+              Shift_Left (Unsigned_32 (Divider_Clock_Source_Type'Pos (Source)),
+                                       24);
+      end case;
+   end Set_Divider_Clock_Source;
+
+   procedure Set_Divider_Clock_Divider (Clock   : Divider_Clock_Type;
+                                        Divider : Divider_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      case Clock is
+         when CLKA =>
+            PWM_Regs.CLK := (PWM_Regs.CLK and 16#FFFF_FF00#) or
+              Unsigned_32 (Divider);
+         when CLKB =>
+            PWM_Regs.CLK := (PWM_Regs.CLK and 16#FF00_FFFF#) or
+              Shift_Left (Unsigned_32 (Divider), 16);
+      end case;
+   end Set_Divider_Clock_Divider;
+
+   procedure Set_Channel_Clock_Source (Channel : Channel_Type;
+                                       Source  : Channel_Clock_Source_Type) is
+      PWM_Channel_Regs : PWM_Channel_Registers
+        with Address => Channel_Registers_Base_Addr (Channel), Volatile;
+   begin
+      PWM_Channel_Regs.CMR := (PWM_Channel_Regs.CMR and 16#FFFF_FFF0#) or
+        CMR_Type (Channel_Clock_Source_Type'Pos (Source));
+   end Set_Channel_Clock_Source;
+
+   procedure Set_Channel_Alignment (Channel   : Channel_Type;
+                                    Alignment : Channel_Alignment_Type) is
+      PWM_Channel_Regs : PWM_Channel_Registers
+        with Address => Channel_Registers_Base_Addr (Channel), Volatile;
+   begin
+      case Alignment is
+         when Left =>
+            PWM_Channel_Regs.CMR := (PWM_Channel_Regs.CMR and (not CMR_CALG));
+         when Center =>
+            PWM_Channel_Regs.CMR := (PWM_Channel_Regs.CMR or CMR_CALG);
+      end case;
+   end Set_Channel_Alignment;
+
+   procedure Set_Channel_Polarity (Channel  : Channel_Type;
+                                   Polarity : Channel_Polarity_Type) is
+      PWM_Channel_Regs : PWM_Channel_Registers
+        with Address => Channel_Registers_Base_Addr (Channel), Volatile;
+   begin
+      case Polarity is
+         when Start_Low =>
+            PWM_Channel_Regs.CMR := (PWM_Channel_Regs.CMR and (not CMR_CPOL));
+         when Start_High =>
+            PWM_Channel_Regs.CMR := (PWM_Channel_Regs.CMR or CMR_CPOL);
+      end case;
+   end Set_Channel_Polarity;
+
+   procedure Set_Channel_Period (Channel : Channel_Type;
+                                 Period  : Channel_Period_Type) is
+      PWM_Channel_Regs : PWM_Channel_Registers
+        with Address => Channel_Registers_Base_Addr (Channel), Volatile;
+   begin
+      PWM_Channel_Regs.CPRD := Unsigned_32 (Period);
+   end Set_Channel_Period;
+
+   procedure Set_Channel_Duty_Cycle (Channel    : Channel_Type;
+                                     Duty_Cycle : Channel_Duty_Cycle_Type) is
+      PWM_Channel_Regs : PWM_Channel_Registers
+        with Address => Channel_Registers_Base_Addr (Channel), Volatile;
+   begin
+      PWM_Channel_Regs.CDTY := Unsigned_32 (Duty_Cycle);
+   end Set_Channel_Duty_Cycle;
+
+   procedure Enable_Interrupt (Channel   : Channel_Type;
+                               Interrupt : Interrupt_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      case Interrupt is
+         when Counter_Event =>
+            PWM_Regs.IER1 :=
+              Shift_Left (16#0000_0001#, Channel_Type'Pos (Channel));
+         when Fault_Protection_Trigger =>
+            PWM_Regs.IER1 :=
+              Shift_Left (16#0001_0000#, Channel_Type'Pos (Channel));
+      end case;
+   end Enable_Interrupt;
+
+   procedure Disable_Interrupt (Channel   : Channel_Type;
+                                Interrupt : Interrupt_Type) is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      case Interrupt is
+         when Counter_Event =>
+            PWM_Regs.IDR1 :=
+              Shift_Left (16#0000_0001#, Channel_Type'Pos (Channel));
+         when Fault_Protection_Trigger =>
+            PWM_Regs.IDR1 :=
+              Shift_Left (16#0001_0000#, Channel_Type'Pos (Channel));
+      end case;
+   end Disable_Interrupt;
+
+   function Get_Interrupt_Status_1 return ISR1_Type is
+      PWM_Regs : PWM_Registers with Address => PWM_BASE, Volatile;
+   begin
+      return PWM_Regs.ISR1;
+   end Get_Interrupt_Status_1;
+
+   function Channel_Registers_Base_Addr (Channel : Channel_Type)
+                                        return System.Address is
+   begin
+      return PWM_BASE + 16#0200# + 16#0020# * Channel_Type'Pos (Channel);
+   end Channel_Registers_Base_Addr;
+end SAM4S.PWM;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pwm.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pwm.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-pwm.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-pwm.ads	2015-07-28 13:57:31.904219720 -0500
@@ -0,0 +1,201 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.PWM is
+   pragma Preelaborate;
+
+   type Divider_Clock_Type is (CLKA, CLKB);
+
+   type Divider_Clock_Source_Type is
+     (MCK,
+      MCK_DIV_2,
+      MCK_DIV_4,
+      MCK_DIV_8,
+      MCK_DIV_16,
+      MCK_DIV_32,
+      MCK_DIV_64,
+      MCK_DIV_128,
+      MCK_DIV_256,
+      MCK_DIV_512,
+      MCK_DIV_1024
+     );
+
+   --  DIVA/DIVB fields to set divider for CLKA and CLKB (affects all
+   --  channels).  A divider of zero turns the clock off.
+   type Divider_Type is range 0 .. 255;
+
+   procedure Set_Divider_Clock_Source (Clock  : Divider_Clock_Type;
+                                       Source : Divider_Clock_Source_Type);
+
+   procedure Set_Divider_Clock_Divider (Clock   : Divider_Clock_Type;
+                                        Divider : Divider_Type);
+
+   type Channel_Type is range 0 .. 3;
+   type Channel_Clock_Source_Type is
+     (MCK,
+      MCK_DIV_2,
+      MCK_DIV_4,
+      MCK_DIV_8,
+      MCK_DIV_16,
+      MCK_DIV_32,
+      MCK_DIV_64,
+      MCK_DIV_128,
+      MCK_DIV_256,
+      MCK_DIV_512,
+      MCK_DIV_1024,
+      CLKA,
+      CLKB
+     );
+   --  Defines whether the period is left-aligned or center-aligned.
+   type Channel_Alignment_Type is (Left, Center);
+
+   --  Defines whether the OCx output waveform starts at a low or high level.
+   type Channel_Polarity_Type is (Start_Low, Start_High);
+
+   type Channel_Period_Type is range 0 .. 65535;
+
+   type Channel_Duty_Cycle_Type is range 0 .. 65535;
+
+   --  TODO:  Add support for other interrupt types.
+   type Interrupt_Type is (Counter_Event, Fault_Protection_Trigger);
+
+   type ISR1_Type is new Unsigned_32;
+   --  Bit fields.
+   ISR1_CHID0         : constant ISR1_Type := 16#0000_0001#;
+   ISR1_CHID1         : constant ISR1_Type := 16#0000_0002#;
+   ISR1_CHID2         : constant ISR1_Type := 16#0000_0004#;
+   ISR1_CHID3         : constant ISR1_Type := 16#0000_0008#;
+   ISR1_FCHID0        : constant ISR1_Type := 16#0001_0000#;
+   ISR1_FCHID1        : constant ISR1_Type := 16#0002_0000#;
+   ISR1_FCHID2        : constant ISR1_Type := 16#0004_0000#;
+   ISR1_FCHID3        : constant ISR1_Type := 16#0008_0000#;
+
+   procedure Enable_Channel (Channel : Channel_Type);
+
+   procedure Disable_Channel (Channel : Channel_Type);
+
+   procedure Set_Channel_Clock_Source (Channel : Channel_Type;
+                                       Source  : Channel_Clock_Source_Type);
+
+   procedure Set_Channel_Alignment (Channel   : Channel_Type;
+                                    Alignment : Channel_Alignment_Type);
+
+   procedure Set_Channel_Polarity (Channel  : Channel_Type;
+                                   Polarity : Channel_Polarity_Type);
+
+   procedure Set_Channel_Period (Channel : Channel_Type;
+                                 Period  : Channel_Period_Type);
+
+   procedure Set_Channel_Duty_Cycle (Channel    : Channel_Type;
+                                     Duty_Cycle : Channel_Duty_Cycle_Type);
+
+   procedure Enable_Interrupt (Channel   : Channel_Type;
+                               Interrupt : Interrupt_Type);
+
+   procedure Disable_Interrupt (Channel   : Channel_Type;
+                                Interrupt : Interrupt_Type);
+
+   function Get_Interrupt_Status_1 return ISR1_Type;
+
+private
+   function Channel_Registers_Base_Addr (Channel : Channel_Type)
+                                        return System.Address;
+
+   type PWM_Registers is record
+      CLK           : Unsigned_32; -- Clock register.
+      ENA           : Unsigned_32; -- Enable register.
+      DIS           : Unsigned_32; -- Disable register.
+      SR            : Unsigned_32; -- Status register.
+      IER1          : Unsigned_32; -- Interrupt enable register 1.
+      IDR1          : Unsigned_32; -- Interrupt disable register 1.
+      IMR1          : Unsigned_32; -- Interrupt mask register 1.
+      ISR1          : ISR1_Type;   -- Interrupt status register 1.
+      SCM           : Unsigned_32; -- Sync channels mode register.
+      Reserved_0    : Unsigned_32;
+      SCUC          : Unsigned_32; -- Sync channels update control register.
+      SCUP          : Unsigned_32; -- Sync channels update period register.
+      SCUPUPD       : Unsigned_32; -- Sync channels update period update reg.
+      IER2          : Unsigned_32; -- Interrupt enable register 2.
+      IDR2          : Unsigned_32; -- Interrupt disable register 2.
+      IMR2          : Unsigned_32; -- Interrupt mask register 2.
+      ISR2          : Unsigned_32; -- Interrupt status register 2.
+      OOV           : Unsigned_32; -- Output override value register.
+      OS            : Unsigned_32; -- Output selection register.
+      OSS           : Unsigned_32; -- Output selection set register.
+      OSC           : Unsigned_32; -- Output selection clear register.
+      OSSUPD        : Unsigned_32; -- Output selection set update register.
+      OSCUPD        : Unsigned_32; -- Output selection clear update register.
+      FMR           : Unsigned_32; -- Fault mode register.
+      FSR           : Unsigned_32; -- Fault status register.
+      FCR           : Unsigned_32; -- Fault clear register.
+      FPV           : Unsigned_32; -- Fault protection value register.
+      FPE           : Unsigned_32; -- Fault protection enable register.
+      Reserved_1    : Unsigned_32; -- 0x70
+      Reserved_2    : Unsigned_32;
+      Reserved_3    : Unsigned_32;
+      ELMR0         : Unsigned_32; -- Event line 0 mode register.
+      ELMR1         : Unsigned_32; -- Event line 1 mode register.
+      Reserved_4    : Unsigned_32;
+      Reserved_5    : Unsigned_32;
+      Reserved_6    : Unsigned_32;
+      Reserved_7    : Unsigned_32; -- 0x90
+      Reserved_8    : Unsigned_32;
+      Reserved_9    : Unsigned_32;
+      Reserved_10   : Unsigned_32;
+      Reserved_11   : Unsigned_32; -- 0xA0
+      Reserved_12   : Unsigned_32;
+      Reserved_13   : Unsigned_32;
+      Reserved_14   : Unsigned_32;
+      SMMR          : Unsigned_32; -- Stepper motor mode register.
+   end record;
+
+   type CMR_Type is new Unsigned_32;
+   --  Bit fields.
+   CMR_CALG         : constant CMR_Type := 16#0000_0100#;
+   CMR_CPOL         : constant CMR_Type := 16#0000_0200#;
+   CMR_CES          : constant CMR_Type := 16#0000_0400#;
+   CMR_DTE          : constant CMR_Type := 16#0001_0000#;
+   CMR_DTHI         : constant CMR_Type := 16#0002_0000#;
+   CMR_DTLI         : constant CMR_Type := 16#0004_0000#;
+
+   type PWM_Channel_Registers is record
+      CMR           : CMR_Type;    -- Channel mode register.
+      CDTY          : Unsigned_32; -- Channel duty cycle register.
+      CDTYUDP       : Unsigned_32; -- Channel duty cycle update register.
+      CPRD          : Unsigned_32; -- Channel period register.
+      CPRDUPD       : Unsigned_32; -- Channel period update register.
+      CCNT          : Unsigned_32; -- Channel counter register.
+      DT            : Unsigned_32; -- Channel dead time register.
+      DTUPD         : Unsigned_32; -- Channel dead time update register.
+   end record;
+end SAM4S.PWM;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-rom.ld bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-rom.ld
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-rom.ld	2013-09-17 07:23:11.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-rom.ld	2015-07-28 13:57:14.414528471 -0500
@@ -1,55 +1,53 @@
-/****************************************************************************
- *                                                                          *
- *                         GNAT COMPILER COMPONENTS                         *
- *                                                                          *
- *                                  A R M                                   *
- *                                                                          *
- *                            Linker Script File                            *
- *                                                                          *
- *      Copyright (C) 1999-2002 Universidad Politecnica de Madrid           *
- *             Copyright (C) 2003-2006 The European Space Agency            *
- *                   Copyright (C) 2003-2013 AdaCore                        *
- *                                                                          *
- * GNAT is free software;  you can  redistribute it  and/or modify it under *
- * terms of the  GNU General Public License as published  by the Free Soft- *
- * ware  Foundation;  either version 2,  or (at your option) any later ver- *
- * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *
- * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *
- * for  more details.  You should have  received  a copy of the GNU General *
- * Public License  distributed with GNAT;  see file COPYING.  If not, write *
- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *
- * Boston, MA 02110-1301, USA.                                              *
- *                                                                          *
- * As a  special  exception,  if you  link  this file  with other  files to *
- * produce an executable,  this file does not by itself cause the resulting *
- * executable to be covered by the GNU General Public License. This except- *
- * ion does not  however invalidate  any other reasons  why the  executable *
- * file might be covered by the  GNU Public License.                        *
- *                                                                          *
- * GNARL was developed by the GNARL team at Florida State University.       *
- * Extensive contributions were provided by Ada Core Technologies, Inc.     *
- * The  executive  was developed  by the  Real-Time  Systems  Group  at the *
- * Technical University of Madrid.                                          *
- *                                                                          *
- ****************************************************************************/
-
-/* This is a ARM specific version of this file */
-
-/* This script replaces ld's default linker script, providing the
-   appropriate memory map and output format. */
+/***************************************************************************
+*  Copyright (c) 2015, Patrick Noffke                                      *
+*  All rights reserved.                                                    *
+*                                                                          *
+*  Redistribution and use in source and binary forms, with or without      *
+*  modification, are permitted provided that the following conditions are  *
+*  met:                                                                    *
+*                                                                          *
+*  1. Redistributions of source code must retain the above copyright       *
+*  notice, this list of conditions and the following disclaimer.           *
+*                                                                          *
+*  2. Redistributions in binary form must reproduce the above copyright    *
+*  notice, this list of conditions and the following disclaimer in the     *
+*  documentation and/or other materials provided with the distribution.    *
+*                                                                          *
+*  3. Neither the name of the copyright holder nor the names of its        *
+*  contributors may be used to endorse or promote products derived from    *
+*  this software without specific prior written permission.                *
+*                                                                          *
+*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS *
+*  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   *
+*  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         *
+*  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      *
+*  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  *
+*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
+*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
+*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
+*  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
+*  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
+*  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    *
+***************************************************************************/
 
 SEARCH_DIR(.)
 __DYNAMIC  =  0;
 
-_DEFAULT_STACK_SIZE = 4*1024;
+_DEFAULT_STACK_SIZE = 2*1024;
 
 ENTRY(_start_rom);
 
 MEMORY
 {
-  flash (rx)  : ORIGIN = 0x00400000, LENGTH = 1024K
-  sram (rwx)  : ORIGIN = 0x20000000, LENGTH = 112K
+/* SAM4SA16C (flash and SRAM sizes are incorrect) */
+/*
+  flash (rx)  : ORIGIN = 0x00400000, LENGTH = 0x00040000
+  sram (rwx)  : ORIGIN = 0x20000000, LENGTH = 0x00010000
+*/
+
+/* SAM4S8C */
+  flash (rx)  : ORIGIN = 0x00400000, LENGTH = 0x00080000
+  sram (rwx)  : ORIGIN = 0x20000000, LENGTH = 0x00020000
 }
 
 SECTIONS
@@ -61,6 +59,11 @@ SECTIONS
     *(.gnu.warning)
   } > flash
 
+  .ARM.extab   : { *(.ARM.extab* .gnu.linkonce.armextab.*) } > flash
+  PROVIDE_HIDDEN (__exidx_start = .);
+  .ARM.exidx   : { *(.ARM.exidx* .gnu.linkonce.armexidx.*) } > flash
+  PROVIDE_HIDDEN (__exidx_end = .);
+
   .rodata :
   {
     *(.lit)
@@ -106,6 +109,8 @@ SECTIONS
    __stack_end = .;
 
    _end = .;
+   __heap_start = .;
+   __heap_end = ORIGIN(sram) + LENGTH(sram);
   } > sram
 
   __bss_words = (__bss_end - __bss_start) >> 2;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-samba.ld bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-samba.ld
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-samba.ld	2014-06-26 05:35:34.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-samba.ld	2015-07-28 13:56:50.351953253 -0500
@@ -1,43 +1,34 @@
-/****************************************************************************
- *                                                                          *
- *                         GNAT COMPILER COMPONENTS                         *
- *                                                                          *
- *                                  A R M                                   *
- *                                                                          *
- *                            Linker Script File                            *
- *                                                                          *
- *      Copyright (C) 1999-2002 Universidad Politecnica de Madrid           *
- *             Copyright (C) 2003-2006 The European Space Agency            *
- *                   Copyright (C) 2003-2013 AdaCore                        *
- *                                                                          *
- * GNAT is free software;  you can  redistribute it  and/or modify it under *
- * terms of the  GNU General Public License as published  by the Free Soft- *
- * ware  Foundation;  either version 2,  or (at your option) any later ver- *
- * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *
- * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *
- * for  more details.  You should have  received  a copy of the GNU General *
- * Public License  distributed with GNAT;  see file COPYING.  If not, write *
- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *
- * Boston, MA 02110-1301, USA.                                              *
- *                                                                          *
- * As a  special  exception,  if you  link  this file  with other  files to *
- * produce an executable,  this file does not by itself cause the resulting *
- * executable to be covered by the GNU General Public License. This except- *
- * ion does not  however invalidate  any other reasons  why the  executable *
- * file might be covered by the  GNU Public License.                        *
- *                                                                          *
- * GNARL was developed by the GNARL team at Florida State University.       *
- * Extensive contributions were provided by Ada Core Technologies, Inc.     *
- * The  executive  was developed  by the  Real-Time  Systems  Group  at the *
- * Technical University of Madrid.                                          *
- *                                                                          *
- ****************************************************************************/
-
-/* This is a ARM specific version of this file */
-
-/* This script replaces ld's default linker script, providing the
-   appropriate memory map and output format. */
+/***************************************************************************
+*  Copyright (c) 2015, Patrick Noffke                                      *
+*  All rights reserved.                                                    *
+*                                                                          *
+*  Redistribution and use in source and binary forms, with or without      *
+*  modification, are permitted provided that the following conditions are  *
+*  met:                                                                    *
+*                                                                          *
+*  1. Redistributions of source code must retain the above copyright       *
+*  notice, this list of conditions and the following disclaimer.           *
+*                                                                          *
+*  2. Redistributions in binary form must reproduce the above copyright    *
+*  notice, this list of conditions and the following disclaimer in the     *
+*  documentation and/or other materials provided with the distribution.    *
+*                                                                          *
+*  3. Neither the name of the copyright holder nor the names of its        *
+*  contributors may be used to endorse or promote products derived from    *
+*  this software without specific prior written permission.                *
+*                                                                          *
+*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS *
+*  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   *
+*  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         *
+*  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      *
+*  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  *
+*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
+*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
+*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
+*  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
+*  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
+*  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    *
+***************************************************************************/
 
 SEARCH_DIR(.)
 __DYNAMIC  =  0;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-spi.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-spi.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-spi.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-spi.adb	2015-07-28 13:55:46.105087421 -0500
@@ -0,0 +1,197 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System.Storage_Elements; use System.Storage_Elements;
+
+package body SAM4S.SPI is
+   procedure Enable is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.CR := CR_SPIEN;
+   end Enable;
+
+   procedure Disable is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.CR := CR_SPIDIS;
+   end Disable;
+
+   procedure Reset is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.CR := CR_SWRST;
+   end Reset;
+
+   procedure Set_Mode (Mode : Mode_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      case Mode is
+         when Master =>
+            SPI_Regs.MR := SPI_Regs.MR or MR_MSTR;
+         when Slave =>
+            SPI_Regs.MR := SPI_Regs.MR and (not MR_MSTR);
+      end case;
+   end Set_Mode;
+
+   procedure Enable_Mode_Fault_Detection is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.MR := SPI_Regs.MR and (not MR_MODFDIS);
+   end Enable_Mode_Fault_Detection;
+
+   procedure Disable_Mode_Fault_Detection is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.MR := SPI_Regs.MR or MR_MODFDIS;
+   end Disable_Mode_Fault_Detection;
+
+   procedure Set_CS_Decoding_Mode (Mode : CS_Decoding_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      case Mode is
+         when Internal =>
+            SPI_Regs.MR := SPI_Regs.MR and (not MR_PSCDEC);
+         when External =>
+            SPI_Regs.MR := SPI_Regs.MR or MR_PSCDEC;
+      end case;
+   end Set_CS_Decoding_Mode;
+
+   procedure Configure_Chip_Select (CS       : Internal_CS_Type;
+                                    Polarity : Clock_Polarity_Type;
+                                    Phase    : Clock_Phase_Type;
+                                    Bits     : Bits_Per_Word_Type;
+                                    Divisor  : Baud_Rate_Divisor_Type;
+                                    DLYBS    : Delay_Before_Clock_Type;
+                                    DLYBCT   : Delay_Between_Transfers_Type;
+                                    CSNAAT   : Boolean := False;
+                                    CSAAT    : Boolean := False) is
+      CSR : CSR_Type with Address => SPI_BASE + 16#30# +
+        4 * Internal_CS_Type'Pos (CS), Volatile;
+      CSR_Value : CSR_Type := 0;
+   begin
+      if Polarity = Inactive_High then
+         CSR_Value := CSR_Value or CSR_CPOL;
+      end if;
+      if Phase = Captured_On_Leading_Edge then
+         CSR_Value := CSR_Value or CSR_NCPHA;
+      end if;
+      if CSNAAT then
+         CSR_Value := CSR_Value or CSR_CSNAAT;
+      end if;
+      if CSAAT then
+         CSR_Value := CSR_Value or CSR_CSAAT;
+      end if;
+      CSR_Value := CSR_Value or Shift_Left (CSR_Type (Bits) - 8, 4);
+      CSR_Value := CSR_Value or Shift_Left (CSR_Type (Divisor), 8);
+      CSR_Value := CSR_Value or Shift_Left (CSR_Type (DLYBS), 16);
+      CSR_Value := CSR_Value or Shift_Left (CSR_Type (DLYBCT), 24);
+      CSR := CSR_Value;
+   end Configure_Chip_Select;
+
+   procedure Select_Internal_CS (CS : Internal_CS_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.MR := (SPI_Regs.MR and 16#FFF0_FFFF#) or
+        Shift_Left (((not Shift_Left (1, Internal_CS_Type'Pos (CS))) and
+                       16#0000_000F#), 16);
+   end Select_Internal_CS;
+
+   procedure Select_External_CS (CS : External_CS_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.MR := (SPI_Regs.MR and 16#FFF0_FFFF#) or
+        Shift_Left (MR_Type (CS), 16);
+   end Select_External_CS;
+
+   procedure Enable_Interrupt (Interrupt : Interrupt_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.IER := Interrupt;
+   end Enable_Interrupt;
+
+   procedure Disable_Interrupt (Interrupt : Interrupt_Type) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.IDR := Interrupt;
+   end Disable_Interrupt;
+
+   function Get_Interrupt_Mask return Interrupt_Type is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return SPI_Regs.IMR;
+   end Get_Interrupt_Mask;
+
+   function Get_Status return Status_Type is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return SPI_Regs.SR;
+   end Get_Status;
+
+   function Is_End_Tx return Boolean is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return (SPI_Regs.SR and SR_ENDTX) /= 0;
+   end Is_End_Tx;
+
+   function Is_End_Rx return Boolean is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return (SPI_Regs.SR and SR_ENDRX) /= 0;
+   end Is_End_Rx;
+
+   function Is_Tx_Buffer_Empty return Boolean is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return (SPI_Regs.SR and SR_TXBUFE) /= 0;
+   end Is_Tx_Buffer_Empty;
+
+   function Is_Rx_Buffer_Full return Boolean is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      return (SPI_Regs.SR and SR_RXBUFF) /= 0;
+   end Is_Rx_Buffer_Full;
+
+   procedure Put (Word : Unsigned_16) is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      SPI_Regs.TDR := Unsigned_32 (Word);
+   end Put;
+
+   function Get return Unsigned_16 is
+      SPI_Regs : SPI_Registers with Address => SPI_BASE, Volatile;
+   begin
+      while (SPI_Regs.SR and SR_RDRF) = 0 loop
+         null;
+      end loop;
+
+      return Unsigned_16 (SPI_Regs.RDR and 16#FFFF#);
+   end Get;
+end SAM4S.SPI;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-spi.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-spi.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-spi.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-spi.ads	2015-07-28 13:55:41.306172137 -0500
@@ -0,0 +1,184 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.SPI is
+   pragma Preelaborate;
+
+   type Mode_Type is (Master, Slave);
+
+   type CS_Decoding_Type is (Internal, External);
+
+   type Internal_CS_Type is (CS0, CS1, CS2, CS3);
+
+   type External_CS_Type is new Integer range 0 .. 14;
+
+   type Clock_Polarity_Type is (Inactive_Low, Inactive_High);
+
+   type Clock_Phase_Type is (Change_On_Leading_Edge, Captured_On_Leading_Edge);
+
+   type Bits_Per_Word_Type is range 8 .. 16;
+
+   type Baud_Rate_Divisor_Type is range 1 .. 255;
+
+   type Delay_Before_Clock_Type is range 0 .. 255;
+
+   type Delay_Between_Transfers_Type is range 0 .. 255;
+
+   type Interrupt_Type is new Unsigned_32;
+   Interrupt_RDRF         : constant Interrupt_Type := 16#0000_0001#;
+   Interrupt_TDRE         : constant Interrupt_Type := 16#0000_0002#;
+   Interrupt_MODF         : constant Interrupt_Type := 16#0000_0004#;
+   Interrupt_OVRES        : constant Interrupt_Type := 16#0000_0008#;
+   Interrupt_ENDRX        : constant Interrupt_Type := 16#0000_0010#;
+   Interrupt_ENDTX        : constant Interrupt_Type := 16#0000_0020#;
+   Interrupt_RXBUFF       : constant Interrupt_Type := 16#0000_0040#;
+   Interrupt_TXBUFE       : constant Interrupt_Type := 16#0000_0080#;
+   Interrupt_NSSR         : constant Interrupt_Type := 16#0000_0100#;
+   Interrupt_TXEMPTY      : constant Interrupt_Type := 16#0000_0200#;
+   Interrupt_UNDES        : constant Interrupt_Type := 16#0000_0400#;
+   Interrupt_All          : constant Interrupt_Type := 16#0000_07FF#;
+
+   type Status_Type is new Unsigned_32;
+   SR_RDRF         : constant Status_Type := 16#0000_0001#;
+   SR_TDRE         : constant Status_Type := 16#0000_0002#;
+   SR_MODF         : constant Status_Type := 16#0000_0004#;
+   SR_OVRES        : constant Status_Type := 16#0000_0008#;
+   SR_ENDRX        : constant Status_Type := 16#0000_0010#;
+   SR_ENDTX        : constant Status_Type := 16#0000_0020#;
+   SR_RXBUFF       : constant Status_Type := 16#0000_0040#;
+   SR_TXBUFE       : constant Status_Type := 16#0000_0080#;
+   SR_NSSR         : constant Status_Type := 16#0000_0100#;
+   SR_TXEMPTY      : constant Status_Type := 16#0000_0200#;
+   SR_UNDES        : constant Status_Type := 16#0000_0400#;
+   SR_SPIENS       : constant Status_Type := 16#0001_0000#;
+
+   procedure Enable;
+
+   procedure Disable;
+
+   procedure Reset;
+
+   procedure Set_Mode (Mode : Mode_Type);
+
+   procedure Enable_Mode_Fault_Detection;
+
+   procedure Disable_Mode_Fault_Detection;
+
+   procedure Set_CS_Decoding_Mode (Mode : CS_Decoding_Type);
+
+   procedure Configure_Chip_Select (CS       : Internal_CS_Type;
+                                    Polarity : Clock_Polarity_Type;
+                                    Phase    : Clock_Phase_Type;
+                                    Bits     : Bits_Per_Word_Type;
+                                    Divisor  : Baud_Rate_Divisor_Type;
+                                    DLYBS    : Delay_Before_Clock_Type;
+                                    DLYBCT   : Delay_Between_Transfers_Type;
+                                    CSNAAT   : Boolean := False;
+                                    CSAAT    : Boolean := False);
+
+   ---------------------------------------------------------------------------
+   --  Select_Internal_CS
+   --
+   --  Selects one of the four NPCSx chip select lines.  No external decoder
+   --  is used.  The decoding mode must be set to Internal.
+   ---------------------------------------------------------------------------
+   procedure Select_Internal_CS (CS : Internal_CS_Type);
+
+   ---------------------------------------------------------------------------
+   --  Select_External_CS
+   --
+   --  Selects one of fifteen externally-decoded chip select lines.  The
+   --  decoding mode must be set to External.
+   ---------------------------------------------------------------------------
+   procedure Select_External_CS (CS : External_CS_Type);
+
+   procedure Enable_Interrupt (Interrupt : Interrupt_Type);
+
+   procedure Disable_Interrupt (Interrupt : Interrupt_Type);
+
+   function Get_Interrupt_Mask return Interrupt_Type;
+
+   function Get_Status return Status_Type;
+
+   function Is_End_Tx return Boolean;
+
+   function Is_End_Rx return Boolean;
+
+   function Is_Tx_Buffer_Empty return Boolean;
+
+   function Is_Rx_Buffer_Full return Boolean;
+
+   procedure Put (Word : Unsigned_16);
+
+   function Get return Unsigned_16;
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_SPIEN         : constant CR_Type := 16#0000_0001#;
+   CR_SPIDIS        : constant CR_Type := 16#0000_0002#;
+   CR_SWRST         : constant CR_Type := 16#0000_0080#;
+   CR_LASTXFR       : constant CR_Type := 16#0100_0000#;
+
+   type MR_Type is new Unsigned_32;
+   MR_MSTR          : constant MR_Type := 16#0000_0001#;
+   MR_PS            : constant MR_Type := 16#0000_0002#;
+   MR_PSCDEC        : constant MR_Type := 16#0000_0004#;
+   MR_MODFDIS       : constant MR_Type := 16#0000_0010#;
+   MR_WDRBT         : constant MR_Type := 16#0000_0020#;
+   MR_LLB           : constant MR_Type := 16#0000_0080#;
+
+   type CSR_Type is new Unsigned_32;
+   CSR_CPOL         : constant CSR_Type := 16#0000_0001#;
+   CSR_NCPHA        : constant CSR_Type := 16#0000_0002#;
+   CSR_CSNAAT       : constant CSR_Type := 16#0000_0004#;
+   CSR_CSAAT        : constant CSR_Type := 16#0000_0008#;
+
+   type SPI_Registers is record
+      CR            : CR_Type;        -- Control register.
+      MR            : MR_Type;        -- Mode register.
+      RDR           : Unsigned_32;    -- Receive data register.
+      TDR           : Unsigned_32;    -- Transmit data register.
+      SR            : Status_Type;    -- Status register.
+      IER           : Interrupt_Type; -- Interrupt enable register.
+      IDR           : Interrupt_Type; -- Interrupt disable register.
+      IMR           : Interrupt_Type; -- Interrupt mask register.
+      Reserved_0    : Unsigned_32;
+      Reserved_1    : Unsigned_32;
+      Reserved_2    : Unsigned_32;
+      Reserved_3    : Unsigned_32;
+      CSR0          : CSR_Type;       -- Chip select register 0.
+      CSR1          : CSR_Type;       -- Chip select register 1.
+      CSR2          : CSR_Type;       -- Chip select register 2.
+      CSR3          : CSR_Type;       -- Chip select register 3.
+   end record;
+end SAM4S.SPI;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-trace.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-trace.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-trace.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-trace.adb	2015-07-28 13:55:33.841303916 -0500
@@ -0,0 +1,125 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with System;
+with System.Storage_Elements; use System.Storage_Elements;
+
+package body SAM4S.Trace is
+   procedure Initialize is
+      ITM_LAR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_0FB0#), Volatile;
+
+      ITM_TCR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_0E80#), Volatile;
+
+      ITM_TER : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_0E00#), Volatile;
+
+      ITM_TPR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_0E40#), Volatile;
+
+      DEMR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_EDFC#), Volatile;
+
+      TPIU_SPP : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E004_00F0#), Volatile;
+
+      TPIU_FFCR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E004_0304#), Volatile;
+
+      TPIU_ACPR : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E004_0010#), Volatile;
+
+      DWT_CTRL : Interfaces.Unsigned_32
+        with Address => System'To_Address (16#E000_1000#), Volatile;
+
+      use Interfaces;
+
+   begin
+      --  Enable write access via the Lock Access Register.
+      ITM_LAR := 16#C5AC_CE55#;
+      --  Enable the ITM, enable SWO mode behavior, enable synchronization
+      --  packets, enable DWT event submission, enable timestamps.
+      ITM_TCR := 16#0001_001F#;
+      --  Enable access in user mode to all 32 channels.
+      ITM_TPR := 16#0000_0000#;
+      --  Enable all 32 trace channels.
+      ITM_TER := 16#FFFF_FFFF#;
+
+      --  Set TRCENA bit to 1 in Debug Exception and Monitor Register.
+      DEMR := DEMR or 16#0100_0000#;
+
+      --  Select NRZ serial wire output.
+      TPIU_SPP := 16#0000_0002#;
+
+      --  Deactivate formatter.
+      TPIU_FFCR := 16#0000_0100#;
+
+      --  Set prescalar (/10).
+      --  TPIU_ACPR := 16#0000_0009#;
+
+      --  Set prescalar (/15).
+      TPIU_ACPR := 14;
+
+      --  Enable exception trace and exception overhead.
+      DWT_CTRL := DWT_CTRL or 16#0005_0000#;
+
+   end Initialize;
+
+   procedure Put (Channel : Channel_Type;
+                  Value   : Value_Type) is
+      Port_Reg : Value_Type with Address => System'To_Address (16#E000_0000#) +
+        4 * Channel_Type'Pos (Channel), Volatile;
+   begin
+      --  Port register lsb is set when the the FIFO can accept at least one
+      --  word.
+      while Port_Reg = 0 loop
+         null;
+      end loop;
+      Port_Reg := Value;
+   end Put;
+
+   procedure Put (Channel : Channel_Type;
+                  Message : String) is
+      Port_Reg : Value_Type with Address => System'To_Address (16#E000_0000#) +
+        4 * Channel_Type'Pos (Channel), Volatile;
+   begin
+      --  Port register lsb is set when the the FIFO can accept at least one
+      --  word.
+      for Index in Message'Range loop
+         while Port_Reg = 0 loop
+            null;
+         end loop;
+         Port_Reg := Value_Type (Character'Pos (Message (Index)));
+      end loop;
+   end Put;
+
+end SAM4S.Trace;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-trace.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-trace.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-trace.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-trace.ads	2015-07-28 13:55:29.137386956 -0500
@@ -0,0 +1,47 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces;
+
+package SAM4S.Trace is
+   pragma Preelaborate;
+
+   type Channel_Type is new Integer range 0 .. 31;
+   type Value_Type is new Interfaces.Unsigned_32;
+
+   procedure Initialize;
+
+   procedure Put (Channel : Channel_Type;
+                  Value   : Value_Type);
+
+   procedure Put (Channel : Channel_Type;
+                  Message : String);
+end SAM4S.Trace;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-twi.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-twi.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-twi.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-twi.adb	2015-07-28 13:55:22.874497517 -0500
@@ -0,0 +1,417 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+package body SAM4S.TWI is
+
+   procedure Configure (TWI_Periph         : TWI_Peripheral_Type;
+                        Clock_Divider      : Clock_Divider_Type;
+                        Clock_Low_Divider  : Clock_Low_Divider_Type;
+                        Clock_High_Divider : Clock_High_Divider_Type;
+                        Mode               : Mode_Type) is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+      CWGR_Value : CWGR_Type := 0;
+   begin
+      Reset (TWI_Periph);
+
+      case Mode is
+         when Master =>
+            TWI_Regs.CR := CR_SVDIS or CR_MSDIS;
+            TWI_Regs.CR := CR_MSEN;
+
+            CWGR_Value := CWGR_Type (Clock_Low_Divider);
+
+            CWGR_Value := CWGR_Value or
+              Shift_Left (CWGR_Type (Clock_High_Divider), 8);
+
+            CWGR_Value := CWGR_Value or
+              Shift_Left (CWGR_Type (Clock_Divider), 16);
+         when Slave =>
+            TWI_Regs.CR := CR_SVDIS or CR_MSDIS;
+            TWI_Regs.CR := CR_SVEN;
+      end case;
+
+      TWI_Regs.CWGR := CWGR_Value;
+   end Configure;
+
+   procedure Reset (TWI_Periph : TWI_Peripheral_Type) is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+      RHR : Unsigned_32 with Volatile;
+      pragma Warnings (Off, RHR);
+   begin
+      TWI_Regs.CR := CR_SWRST;
+      RHR := TWI_Regs.RHR;
+   end Reset;
+
+   function Is_Tx_Ready (TWI_Periph : TWI_Peripheral_Type)
+                        return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_TXRDY) /= 0;
+   end Is_Tx_Ready;
+
+   function Is_Rx_Ready (TWI_Periph : TWI_Peripheral_Type)
+                        return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_RXRDY) /= 0;
+   end Is_Rx_Ready;
+
+   function Is_End_Tx (TWI_Periph : TWI_Peripheral_Type) return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_ENDTX) /= 0;
+   end Is_End_Tx;
+
+   function Is_End_Rx (TWI_Periph : TWI_Peripheral_Type) return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_ENDRX) /= 0;
+   end Is_End_Rx;
+
+   function Is_Tx_Buffer_Empty (TWI_Periph : TWI_Peripheral_Type)
+                               return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_TXBUFE) /= 0;
+   end Is_Tx_Buffer_Empty;
+
+   function Is_Rx_Buffer_Full (TWI_Periph : TWI_Peripheral_Type)
+                              return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.SR and SR_RXBUFF) /= 0;
+   end Is_Rx_Buffer_Full;
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Character) return Read_Result_Type is
+      Byte : Unsigned_8 := 0;
+      Result : constant Read_Result_Type :=
+        Get (TWI_Periph, Mode, Address, Byte);
+   begin
+      if Result = Success then
+         Data := Character'Val (Byte);
+      end if;
+      return Result;
+   end Get;
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Unsigned_8)
+                return Read_Result_Type is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+      Attempts : Integer := 15_000;
+   begin
+      case Mode is
+         when Master =>
+            TWI_Regs.MMR := 0;
+            TWI_Regs.MMR := MMR_MREAD or Shift_Left (MMR_Type (Address), 16);
+
+            --  Send a START condition.
+            TWI_Regs.CR := (CR_START or CR_STOP);
+
+            while Attempts >= 0 loop
+               declare
+                  Status : constant SR_Type := TWI_Regs.SR;
+               begin
+                  if (Status and SR_NACK) /= 0 then
+                     return Receive_NACK;
+                  end if;
+
+                  Attempts := Attempts - 1;
+                  if Attempts = 0 then
+                     return Timeout;
+                  end if;
+
+                  if (Status and SR_RXRDY) /= 0 then
+                     Data := Unsigned_8'Val (TWI_Regs.RHR and 16#0000_00FF#);
+                     exit;
+                  end if;
+               end;
+            end loop;
+
+            --  Wait for STOP condition.
+            while (TWI_Regs.SR and SR_TXCOMP) = 0 loop
+               null;
+            end loop;
+
+         when Slave =>
+            null;
+      end case;
+
+      return Success;
+   end Get;
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Byte_Array_Type) return Read_Result_Type is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+      Attempts : Integer := 15_000;
+      Stop_Sent : Boolean := False;
+   begin
+      case Mode is
+         when Master =>
+            TWI_Regs.MMR := 0;
+            TWI_Regs.MMR := MMR_MREAD or Shift_Left (MMR_Type (Address), 16);
+
+            if Data'Length = 1 then
+               --  Send START and STOP conditions.
+               TWI_Regs.CR := (CR_START or CR_STOP);
+               Stop_Sent := True;
+            else
+               --  Send a START condition.
+               TWI_Regs.CR := CR_START;
+            end if;
+
+            for Index in Data'Range loop
+               --  Wait for RXRDY for each byte, checking for NACK and timeout
+               --  as well.
+               while True loop
+                  declare
+                     Status : constant SR_Type := TWI_Regs.SR;
+                  begin
+                     if (Status and SR_NACK) /= 0 then
+                        return Receive_NACK;
+                     end if;
+
+                     Attempts := Attempts - 1;
+                     if Attempts = 0 then
+                        return Timeout;
+                     end if;
+
+                     --  Send STOP before last byte if not already sent.
+                     if Index = Data'Last and Stop_Sent = False then
+                        TWI_Regs.CR := CR_STOP;
+                        Stop_Sent := True;
+                     end if;
+
+                     if (Status and SR_RXRDY) /= 0 then
+                        exit;
+                     end if;
+                  end;
+               end loop;
+
+               --  RXRDY is set, read the byte and reset the timeout.
+               Data (Index) :=
+                 Unsigned_8'Val (TWI_Regs.RHR and 16#0000_00FF#);
+
+               Attempts := 15_000;
+            end loop;
+
+            --  Wait for STOP condition.
+            while (TWI_Regs.SR and SR_TXCOMP) = 0 loop
+               null;
+            end loop;
+
+         when Slave =>
+            null;
+      end case;
+
+      return Success;
+   end Get;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Character) return Write_Result_Type is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return Put (TWI_Periph, Mode, Address,
+                       Unsigned_8 (Character'Pos (Data)));
+   end Put;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Unsigned_8) return Write_Result_Type is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      case Mode is
+         when Master =>
+            TWI_Regs.MMR := 0;
+            TWI_Regs.MMR := Shift_Left (MMR_Type (Address), 16);
+
+            --  Send the byte when ready.
+            while True loop
+               declare
+                  Status : constant SR_Type := TWI_Regs.SR;
+               begin
+                  if (Status and SR_NACK) /= 0 then
+                     return Receive_NACK;
+                  end if;
+
+                  if (Status and SR_TXRDY) /= 0 then
+                     TWI_Regs.THR := Unsigned_32 (Data);
+                     exit;
+                  end if;
+               end;
+            end loop;
+
+            --  Wait for the byte to be sent.
+            while True loop
+               declare
+                  Status : constant SR_Type := TWI_Regs.SR;
+               begin
+                  if (Status and SR_NACK) /= 0 then
+                     return Receive_NACK;
+                  end if;
+
+                  if (Status and SR_TXRDY) /= 0 then
+                     exit;
+                  end if;
+               end;
+            end loop;
+
+            --  Send the stop bit.
+            TWI_Regs.CR := CR_STOP;
+
+            --  Wait for STOP condition.
+            while (TWI_Regs.SR and SR_TXCOMP) = 0 loop
+               null;
+            end loop;
+         when Slave =>
+            null;
+      end case;
+
+      return Success;
+   end Put;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Byte_Array_Type) return Write_Result_Type is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      case Mode is
+         when Master =>
+            TWI_Regs.MMR := 0;
+            TWI_Regs.MMR := Shift_Left (MMR_Type (Address), 16);
+
+            for Index in Data'Range loop
+               --  Send the byte when ready.
+               while True loop
+                  declare
+                     Status : constant SR_Type := TWI_Regs.SR;
+                  begin
+                     if (Status and SR_NACK) /= 0 then
+                        return Receive_NACK;
+                     end if;
+
+                     if (Status and SR_TXRDY) /= 0 then
+                        TWI_Regs.THR := Unsigned_32 (Data (Index));
+                        exit;
+                     end if;
+                  end;
+               end loop;
+            end loop;
+
+            --  Wait for the last byte to be sent.
+            while True loop
+               declare
+                  Status : constant SR_Type := TWI_Regs.SR;
+               begin
+                  if (Status and SR_NACK) /= 0 then
+                     return Receive_NACK;
+                  end if;
+
+                  if (Status and SR_TXRDY) /= 0 then
+                     exit;
+                  end if;
+               end;
+            end loop;
+
+            --  Send the stop bit.
+            TWI_Regs.CR := CR_STOP;
+
+            --  Wait for STOP condition.
+            while (TWI_Regs.SR and SR_TXCOMP) = 0 loop
+               null;
+            end loop;
+         when Slave =>
+            null;
+      end case;
+
+      return Success;
+   end Put;
+
+   procedure Enable_Interrupt (TWI_Periph : TWI_Peripheral_Type;
+                               Interrupt  : Interrupt_Type) is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      TWI_Regs.IER := Interrupt;
+   end Enable_Interrupt;
+
+   procedure Disable_Interrupt (TWI_Periph : TWI_Peripheral_Type;
+                                Interrupt  : Interrupt_Type) is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      TWI_Regs.IDR := Interrupt;
+   end Disable_Interrupt;
+
+   function Is_Interrupt_Enabled (TWI_Periph : TWI_Peripheral_Type;
+                                  Interrupt  : Interrupt_Type)
+                                 return Boolean is
+      TWI_Regs : TWI_Registers
+        with Address => TWI_Base_Addr (TWI_Periph), Volatile;
+   begin
+      return (TWI_Regs.IMR and Interrupt) = Interrupt;
+   end Is_Interrupt_Enabled;
+
+   function TWI_Base_Addr (TWI_Periph : TWI_Peripheral_Type)
+                          return System.Address is
+   begin
+      case TWI_Periph is
+         when TWI0 =>
+            return TWI0_BASE;
+         when TWI1 =>
+            return TWI1_BASE;
+      end case;
+   end TWI_Base_Addr;
+
+end SAM4S.TWI;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-twi.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-twi.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-twi.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-twi.ads	2015-07-28 13:55:14.601643559 -0500
@@ -0,0 +1,194 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+with System;
+
+package SAM4S.TWI is
+   pragma Preelaborate;
+
+   type Byte_Array_Type is array (Positive range <>) of Unsigned_8;
+
+   type TWI_Peripheral_Type is (TWI0, TWI1);
+
+   subtype Clock_Divider_Type is Integer range 0 .. 7;
+
+   type Clock_Low_Divider_Type is new Unsigned_8;
+
+   type Clock_High_Divider_Type is new Unsigned_8;
+
+   type Mode_Type is (Master, Slave);
+
+   subtype Device_Address_Type is Integer range 0 .. 127;
+
+   type Write_Result_Type is (Success, Receive_NACK);
+
+   type Read_Result_Type is (Success, Receive_NACK, Timeout);
+
+   --  TODO:  Support internal addresses and 10-bit device addresses.
+
+   type Interrupt_Type is new Unsigned_32;
+   Interrupt_TXCOMP  : constant Interrupt_Type := 16#0000_0001#;
+   Interrupt_RXRDY   : constant Interrupt_Type := 16#0000_0002#;
+   Interrupt_TXRDY   : constant Interrupt_Type := 16#0000_0004#;
+   Interrupt_SVACC   : constant Interrupt_Type := 16#0000_0010#;
+   Interrupt_GACC    : constant Interrupt_Type := 16#0000_0020#;
+   Interrupt_OVRE    : constant Interrupt_Type := 16#0000_0040#;
+   Interrupt_NACK    : constant Interrupt_Type := 16#0000_0100#;
+   Interrupt_ARBLST  : constant Interrupt_Type := 16#0000_0200#;
+   Interrupt_SCL_WS  : constant Interrupt_Type := 16#0000_0400#;
+   Interrupt_EOSACC  : constant Interrupt_Type := 16#0000_0800#;
+   Interrupt_ENDRX   : constant Interrupt_Type := 16#0000_1000#;
+   Interrupt_ENDTX   : constant Interrupt_Type := 16#0000_2000#;
+   Interrupt_RXBUFF  : constant Interrupt_Type := 16#0000_4000#;
+   Interrupt_TXBUFE  : constant Interrupt_Type := 16#0000_8000#;
+   Interrupt_All     : constant Interrupt_Type := 16#0000_FF77#;
+
+   procedure Configure (TWI_Periph         : TWI_Peripheral_Type;
+                        Clock_Divider      : Clock_Divider_Type;
+                        Clock_Low_Divider  : Clock_Low_Divider_Type;
+                        Clock_High_Divider : Clock_High_Divider_Type;
+                        Mode               : Mode_Type);
+
+   function Is_Tx_Ready (TWI_Periph : TWI_Peripheral_Type) return Boolean;
+
+   function Is_Rx_Ready (TWI_Periph : TWI_Peripheral_Type) return Boolean;
+
+   function Is_End_Tx (TWI_Periph : TWI_Peripheral_Type) return Boolean;
+
+   function Is_End_Rx (TWI_Periph : TWI_Peripheral_Type) return Boolean;
+
+   function Is_Tx_Buffer_Empty (TWI_Periph : TWI_Peripheral_Type)
+                               return Boolean;
+
+   function Is_Rx_Buffer_Full (TWI_Periph : TWI_Peripheral_Type)
+                              return Boolean;
+
+   procedure Reset (TWI_Periph : TWI_Peripheral_Type);
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Character) return Read_Result_Type;
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Unsigned_8) return Read_Result_Type;
+
+   function Get (TWI_Periph :     TWI_Peripheral_Type;
+                 Mode       :     Mode_Type;
+                 Address    :     Device_Address_Type;
+                 Data       : out Byte_Array_Type) return Read_Result_Type;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Character) return Write_Result_Type;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Unsigned_8) return Write_Result_Type;
+
+   function Put (TWI_Periph : TWI_Peripheral_Type;
+                 Mode       : Mode_Type;
+                 Address    : Device_Address_Type;
+                 Data       : Byte_Array_Type) return Write_Result_Type;
+
+   procedure Enable_Interrupt (TWI_Periph : TWI_Peripheral_Type;
+                               Interrupt  : Interrupt_Type);
+
+   procedure Disable_Interrupt (TWI_Periph : TWI_Peripheral_Type;
+                                Interrupt  : Interrupt_Type);
+
+   function Is_Interrupt_Enabled (TWI_Periph : TWI_Peripheral_Type;
+                                  Interrupt  : Interrupt_Type)
+                                 return Boolean;
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_START  : constant CR_Type := 16#0000_0001#;
+   CR_STOP   : constant CR_Type := 16#0000_0002#;
+   CR_MSEN   : constant CR_Type := 16#0000_0004#;
+   CR_MSDIS  : constant CR_Type := 16#0000_0008#;
+   CR_SVEN   : constant CR_Type := 16#0000_0010#;
+   CR_SVDIS  : constant CR_Type := 16#0000_0020#;
+   CR_QUICK  : constant CR_Type := 16#0000_0040#;
+   CR_SWRST  : constant CR_Type := 16#0000_0080#;
+
+   type MMR_Type is new Unsigned_32;
+   MMR_MREAD : constant MMR_Type := 16#0000_1000#;
+
+   type SMR_Type is new Unsigned_32;
+
+   type IADR_Type is new Unsigned_32;
+
+   type CWGR_Type is new Unsigned_32;
+
+   type SR_Type is new Unsigned_32;
+   SR_TXCOMP  : constant SR_Type := 16#0000_0001#;
+   SR_RXRDY   : constant SR_Type := 16#0000_0002#;
+   SR_TXRDY   : constant SR_Type := 16#0000_0004#;
+   SR_SVREAD  : constant SR_Type := 16#0000_0008#;
+   SR_SVACC   : constant SR_Type := 16#0000_0010#;
+   SR_GACC    : constant SR_Type := 16#0000_0020#;
+   SR_OVRE    : constant SR_Type := 16#0000_0040#;
+   SR_NACK    : constant SR_Type := 16#0000_0100#;
+   SR_ARBLST  : constant SR_Type := 16#0000_0200#;
+   SR_SCLWS   : constant SR_Type := 16#0000_0400#;
+   SR_EOSACC  : constant SR_Type := 16#0000_0800#;
+   SR_ENDRX   : constant SR_Type := 16#0000_1000#;
+   SR_ENDTX   : constant SR_Type := 16#0000_2000#;
+   SR_RXBUFF  : constant SR_Type := 16#0000_4000#;
+   SR_TXBUFE  : constant SR_Type := 16#0000_8000#;
+
+   function TWI_Base_Addr (TWI_Periph : TWI_Peripheral_Type)
+                          return System.Address;
+
+   type TWI_Registers is record
+      CR          : CR_Type;        -- Control register
+      MMR         : MMR_Type;       -- Master mode register
+      SMR         : SMR_Type;       -- Slave mode register
+      IADR        : IADR_Type;      -- Internal address register
+      CWGR        : CWGR_Type;      -- Clock waveform generator register
+      Reserved_14 : Unsigned_32;    -- 0x14
+      Reserved_18 : Unsigned_32;    -- 0x18
+      Reserved_1C : Unsigned_32;    -- 0x1C
+      SR          : SR_Type;        -- Status register
+      IER         : Interrupt_Type; -- Interrupt enable register
+      IDR         : Interrupt_Type; -- Interrupt disable register
+      IMR         : Interrupt_Type; -- Interrupt mask register
+      RHR         : Unsigned_32;    -- Receive holding register
+      THR         : Unsigned_32;    -- Transmit holding register
+   end record;
+
+end SAM4S.TWI;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-uart.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-uart.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-uart.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-uart.adb	2015-07-28 13:55:04.393823761 -0500
@@ -0,0 +1,181 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with SAM4S.PMC;
+
+package body SAM4S.UART is
+
+   procedure Configure (UART_Periph : UART_Peripheral_Type;
+                        Baud_Rate   : Baud_Rate_Type;
+                        Parity      : Parity_Type := None;
+                        Mode        : Mode_Type := Normal) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+      CD : constant Unsigned_32 :=
+        Unsigned_32 (SAM4S.PMC.MCK / (16 * Baud_Rate));
+   begin
+      UART_Regs.MR := Shift_Left (Unsigned_32 (Parity_Type'Pos (Parity)), 9) or
+        Shift_Left (Unsigned_32 (Mode_Type'Pos (Mode)), 14);
+      UART_Regs.BRGR := CD;
+   end Configure;
+
+   procedure Reset (UART_Periph : UART_Peripheral_Type) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.CR := (CR_RSTTX or CR_RSTRX);
+   end Reset;
+
+   procedure Enable (UART_Periph : UART_Peripheral_Type) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.CR := (CR_RXEN or CR_TXEN);
+   end Enable;
+
+   procedure Disable (UART_Periph : UART_Peripheral_Type) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.CR := (CR_RXDIS or CR_TXDIS);
+   end Disable;
+
+   function Is_Tx_Ready (UART_Periph : UART_Peripheral_Type) return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_TXRDY) /= 0;
+   end Is_Tx_Ready;
+
+   function Is_Rx_Ready (UART_Periph : UART_Peripheral_Type) return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_RXRDY) /= 0;
+   end Is_Rx_Ready;
+
+   function Is_End_Tx (UART_Periph : UART_Peripheral_Type) return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_ENDTX) /= 0;
+   end Is_End_Tx;
+
+   function Is_End_Rx (UART_Periph : UART_Peripheral_Type) return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_ENDRX) /= 0;
+   end Is_End_Rx;
+
+   function Is_Tx_Buffer_Empty (UART_Periph : UART_Peripheral_Type)
+                               return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_TXBUFE) /= 0;
+   end Is_Tx_Buffer_Empty;
+
+   function Is_Rx_Buffer_Full (UART_Periph : UART_Peripheral_Type)
+                              return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.SR and SR_RXBUFF) /= 0;
+   end Is_Rx_Buffer_Full;
+
+   function Char_Get (UART_Periph : UART_Peripheral_Type) return Character is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return Character'Val (UART_Regs.RHR and 16#0000_00FF#);
+   end Char_Get;
+
+   function Byte_Get (UART_Periph : UART_Peripheral_Type) return Unsigned_8 is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return Unsigned_8'Val (UART_Regs.RHR and 16#0000_00FF#);
+   end Byte_Get;
+
+   procedure Char_Put (UART_Periph : UART_Peripheral_Type;
+                       Data        : Character) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.THR := Unsigned_32 (Character'Pos (Data));
+   end Char_Put;
+
+   procedure Byte_Put (UART_Periph : UART_Peripheral_Type;
+                       Data        : Unsigned_8) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.THR := Unsigned_32 (Data);
+   end Byte_Put;
+
+   procedure Enable_Interrupt (UART_Periph : UART_Peripheral_Type;
+                               Interrupt   : Interrupt_Type) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.IER := Interrupt;
+   end Enable_Interrupt;
+
+   procedure Disable_Interrupt (UART_Periph : UART_Peripheral_Type;
+                                Interrupt   : Interrupt_Type) is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      UART_Regs.IDR := Interrupt;
+   end Disable_Interrupt;
+
+   function Is_Interrupt_Enabled (UART_Periph : UART_Peripheral_Type;
+                                  Interrupt   : Interrupt_Type)
+                                 return Boolean is
+      UART_Regs : UART_Registers
+        with Address => UART_Base_Addr (UART_Periph), Volatile;
+   begin
+      return (UART_Regs.IMR and Interrupt) = Interrupt;
+   end Is_Interrupt_Enabled;
+
+   function UART_Base_Addr (UART_Periph : UART_Peripheral_Type)
+                           return System.Address is
+   begin
+      case UART_Periph is
+         when UART0 =>
+            return UART0_BASE;
+         when UART1 =>
+            return UART1_BASE;
+      end case;
+   end UART_Base_Addr;
+
+end SAM4S.UART;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-uart.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-uart.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-uart.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-uart.ads	2015-07-28 13:54:58.201933068 -0500
@@ -0,0 +1,141 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+with System;
+
+package SAM4S.UART is
+   pragma Preelaborate;
+
+   type UART_Peripheral_Type is (UART0, UART1);
+
+   subtype Baud_Rate_Type is Positive range 153 .. 10_000_000;
+
+   type Parity_Type is (Even, Odd, Space, Mark, None);
+
+   type Mode_Type is (Normal, Automatic, Local_Loopback, Remote_Loopback);
+
+   type Interrupt_Type is new Unsigned_32;
+   Interrupt_RXRDY   : constant Interrupt_Type := 16#0000_0001#;
+   Interrupt_TXRDY   : constant Interrupt_Type := 16#0000_0002#;
+   Interrupt_ENDRX   : constant Interrupt_Type := 16#0000_0008#;
+   Interrupt_ENDTX   : constant Interrupt_Type := 16#0000_0010#;
+   Interrupt_OVRE    : constant Interrupt_Type := 16#0000_0020#;
+   Interrupt_FRAME   : constant Interrupt_Type := 16#0000_0040#;
+   Interrupt_PARE    : constant Interrupt_Type := 16#0000_0080#;
+   Interrupt_TXEMPTY : constant Interrupt_Type := 16#0000_0200#;
+   Interrupt_TXBUFE  : constant Interrupt_Type := 16#0000_0800#;
+   Interrupt_RXBUFF  : constant Interrupt_Type := 16#0000_1000#;
+   Interrupt_All     : constant Interrupt_Type := 16#0000_1AFB#;
+
+   procedure Configure (UART_Periph : UART_Peripheral_Type;
+                        Baud_Rate   : Baud_Rate_Type;
+                        Parity      : Parity_Type := None;
+                        Mode        : Mode_Type := Normal);
+
+   function Is_Tx_Ready (UART_Periph : UART_Peripheral_Type) return Boolean;
+
+   function Is_Rx_Ready (UART_Periph : UART_Peripheral_Type) return Boolean;
+
+   function Is_End_Tx (UART_Periph : UART_Peripheral_Type) return Boolean;
+
+   function Is_End_Rx (UART_Periph : UART_Peripheral_Type) return Boolean;
+
+   function Is_Tx_Buffer_Empty (UART_Periph : UART_Peripheral_Type)
+                               return Boolean;
+
+   function Is_Rx_Buffer_Full (UART_Periph : UART_Peripheral_Type)
+                              return Boolean;
+
+   procedure Reset (UART_Periph : UART_Peripheral_Type);
+
+   procedure Enable (UART_Periph : UART_Peripheral_Type);
+
+   procedure Disable (UART_Periph : UART_Peripheral_Type);
+
+   function Byte_Get (UART_Periph : UART_Peripheral_Type) return Unsigned_8;
+
+   function Char_Get (UART_Periph : UART_Peripheral_Type) return Character;
+
+   procedure Char_Put (UART_Periph : UART_Peripheral_Type;
+                       Data        : Character);
+
+   procedure Byte_Put (UART_Periph : UART_Peripheral_Type;
+                       Data        : Unsigned_8);
+
+   procedure Enable_Interrupt (UART_Periph : UART_Peripheral_Type;
+                               Interrupt   : Interrupt_Type);
+
+   procedure Disable_Interrupt (UART_Periph : UART_Peripheral_Type;
+                                Interrupt   : Interrupt_Type);
+
+   function Is_Interrupt_Enabled (UART_Periph : UART_Peripheral_Type;
+                                  Interrupt   : Interrupt_Type)
+                                 return Boolean;
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_RSTRX   : constant CR_Type := 16#0000_0004#;
+   CR_RSTTX   : constant CR_Type := 16#0000_0008#;
+   CR_RXEN    : constant CR_Type := 16#0000_0010#;
+   CR_RXDIS   : constant CR_Type := 16#0000_0020#;
+   CR_TXEN    : constant CR_Type := 16#0000_0040#;
+   CR_TXDIS   : constant CR_Type := 16#0000_0080#;
+   CR_RSTSTA  : constant CR_Type := 16#0000_0100#;
+
+   type SR_Type is new Unsigned_32;
+   SR_RXRDY   : constant SR_Type := 16#0000_0001#;
+   SR_TXRDY   : constant SR_Type := 16#0000_0002#;
+   SR_ENDRX   : constant SR_Type := 16#0000_0008#;
+   SR_ENDTX   : constant SR_Type := 16#0000_0010#;
+   SR_OVRE    : constant SR_Type := 16#0000_0020#;
+   SR_FRAME   : constant SR_Type := 16#0000_0040#;
+   SR_PARE    : constant SR_Type := 16#0000_0080#;
+   SR_TXEMPTY : constant SR_Type := 16#0000_0200#;
+   SR_TXBUFE  : constant SR_Type := 16#0000_0800#;
+   SR_RXBUFF  : constant SR_Type := 16#0000_1000#;
+
+   function UART_Base_Addr (UART_Periph : UART_Peripheral_Type)
+                           return System.Address;
+
+   type UART_Registers is record
+      CR          : CR_Type;        -- Control register
+      MR          : Unsigned_32;    -- Mode register
+      IER         : Interrupt_Type; -- Interrupt enable register
+      IDR         : Interrupt_Type; -- Interrupt disable register
+      IMR         : Interrupt_Type; -- Interrupt mask register
+      SR          : SR_Type;        -- Status register
+      RHR         : Unsigned_32;    -- Receive holding register
+      THR         : Unsigned_32;    -- Transmit holding register
+      BRGR        : Unsigned_32;    -- Baud rate generator register
+   end record;
+
+end SAM4S.UART;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-usart.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-usart.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-usart.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-usart.adb	2015-07-28 13:54:48.131110851 -0500
@@ -0,0 +1,272 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+package body SAM4S.USART is
+
+   procedure Configure (USART_Periph     : USART_Peripheral_Type;
+                        Clock_Divider    : Clock_Divider_Type;
+                        Mode             : Mode_Type;
+                        Clock_Select     : Clock_Select_Type;
+                        Character_Length : Character_Length_Type  := 8;
+                        Sync_Mode_Select : Sync_Mode_Select_Type  := Async;
+                        Parity           : Parity_Type            := None;
+                        Stop_Bits        : Stop_Bits_Type         := One;
+                        Channel_Mode     : Channel_Mode_Type      := Normal;
+                        Bit_Order        : Bit_Order_Type         := LSB_First;
+                        Clock_Out_Select : Clock_Out_Select_Type
+                          := Not_Driven;
+                        Oversampling     : Oversampling_Mode_Type := X_16) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+      MR_Value : MR_Type;
+   begin
+      case Mode is
+         when Normal .. ISO7816_T_0 =>
+            MR_Value := MR_Type (Mode_Type'Pos (Mode));
+         when ISO7816_T_1 =>
+            MR_Value := MR_MODE_ISO7816_T_1;
+         when IRDA =>
+            MR_Value := MR_MODE_IRDA;
+      end case;
+
+      case Clock_Select is
+         when MCK | MCK_DIV_8 =>
+            MR_Value := MR_Value or
+              Shift_Left (MR_Type (Clock_Select_Type'Pos (Clock_Select)), 4);
+         when SCK =>
+            MR_Value := MR_Value or MR_CLKS_SCK;
+      end case;
+
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Character_Length_Type'Pos (Character_Length - 5)),
+                    6);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Sync_Mode_Select_Type'Pos (Sync_Mode_Select)), 8);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Parity_Type'Pos (Parity)), 9);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Stop_Bits_Type'Pos (Stop_Bits)), 12);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Channel_Mode_Type'Pos (Channel_Mode)), 14);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Bit_Order_Type'Pos (Bit_Order)), 16);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Clock_Out_Select_Type'Pos (Clock_Out_Select)),
+                    18);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Oversampling_Mode_Type'Pos (Oversampling)), 19);
+
+      USART_Regs.MR := MR_Value;
+
+      USART_Regs.BRGR := Unsigned_32 (Clock_Divider);
+   end Configure;
+
+   procedure Configure_SPI_Mode (USART_Periph   : USART_Peripheral_Type;
+                                 Clock_Divider  : Clock_Divider_Type;
+                                 Clock_Select   : Clock_Select_Type;
+                                 Mode           : SPI_Mode_Type;
+                                 Clock_Phase    : Clock_Phase_Type;
+                                 Clock_Polarity : Clock_Polarity_Type;
+                                 Wait_Read      : Wait_Read_Type
+                                   := No_Wait) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+      MR_Value : MR_Type;
+   begin
+      case Mode is
+         when Master =>
+            MR_Value := MR_MODE_SPI_MASTER or MR_CLKO;
+         when Slave =>
+            MR_Value := MR_MODE_SPI_SLAVE;
+      end case;
+
+      case Clock_Select is
+         when MCK | MCK_DIV_8 =>
+            MR_Value := MR_Value or
+              Shift_Left (MR_Type (Clock_Select_Type'Pos (Clock_Select)), 4);
+         when SCK =>
+            MR_Value := MR_Value or MR_CLKS_SCK;
+      end case;
+
+      MR_Value := MR_Value or MR_CHRL_8_BIT;
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Clock_Phase_Type'Pos (Clock_Phase)), 8);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Clock_Polarity_Type'Pos (Clock_Polarity)), 16);
+      MR_Value := MR_Value or
+        Shift_Left (MR_Type (Wait_Read_Type'Pos (Wait_Read)), 20);
+
+      USART_Regs.MR := MR_Value;
+
+      USART_Regs.BRGR := Unsigned_32 (Clock_Divider);
+   end Configure_SPI_Mode;
+
+   procedure Reset (USART_Periph : USART_Peripheral_Type) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.MR := 0;
+      USART_Regs.RTOR := 0;
+      USART_Regs.TTGR := 0;
+      --  Reset and disable RX and TX, reset status, drive DTS and DTR high.
+      USART_Regs.CR := (CR_RSTTX or CR_RSTRX or
+                          CR_RXDIS or CR_TXDIS or CR_RSTSTA
+                          or CR_RTSDIS or CR_DTRDIS);
+   end Reset;
+
+   procedure Enable (USART_Periph : USART_Peripheral_Type) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.CR := (CR_RXEN or CR_TXEN);
+   end Enable;
+
+   procedure Disable (USART_Periph : USART_Peripheral_Type) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.CR := (CR_RXDIS or CR_TXDIS);
+   end Disable;
+
+   function Is_Tx_Ready (USART_Periph : USART_Peripheral_Type)
+                        return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_TXRDY) /= 0;
+   end Is_Tx_Ready;
+
+   function Is_Rx_Ready (USART_Periph : USART_Peripheral_Type)
+                        return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_RXRDY) /= 0;
+   end Is_Rx_Ready;
+
+   function Is_End_Tx (USART_Periph : USART_Peripheral_Type) return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_ENDTX) /= 0;
+   end Is_End_Tx;
+
+   function Is_End_Rx (USART_Periph : USART_Peripheral_Type) return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_ENDRX) /= 0;
+   end Is_End_Rx;
+
+   function Is_Tx_Buffer_Empty (USART_Periph : USART_Peripheral_Type)
+                               return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_TXBUFE) /= 0;
+   end Is_Tx_Buffer_Empty;
+
+   function Is_Rx_Buffer_Full (USART_Periph : USART_Peripheral_Type)
+                              return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.CSR and CSR_RXBUFF) /= 0;
+   end Is_Rx_Buffer_Full;
+
+   function Char_Get (USART_Periph : USART_Peripheral_Type) return Character is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return Character'Val (USART_Regs.RHR and 16#0000_00FF#);
+   end Char_Get;
+
+   function Byte_Get (USART_Periph : USART_Peripheral_Type)
+                     return Unsigned_8 is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return Unsigned_8'Val (USART_Regs.RHR and 16#0000_00FF#);
+   end Byte_Get;
+
+   procedure Char_Put (USART_Periph : USART_Peripheral_Type;
+                       Data         : Character) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.THR := Unsigned_32 (Character'Pos (Data));
+   end Char_Put;
+
+   procedure Byte_Put (USART_Periph : USART_Peripheral_Type;
+                       Data         : Unsigned_8) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.THR := Unsigned_32 (Data);
+   end Byte_Put;
+
+   procedure Enable_Interrupt (USART_Periph : USART_Peripheral_Type;
+                               Interrupt    : Interrupt_Type) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.IER := Interrupt;
+   end Enable_Interrupt;
+
+   procedure Disable_Interrupt (USART_Periph : USART_Peripheral_Type;
+                                Interrupt    : Interrupt_Type) is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      USART_Regs.IDR := Interrupt;
+   end Disable_Interrupt;
+
+   function Is_Interrupt_Enabled (USART_Periph : USART_Peripheral_Type;
+                                  Interrupt    : Interrupt_Type)
+                                 return Boolean is
+      USART_Regs : USART_Registers
+        with Address => USART_Base_Addr (USART_Periph), Volatile;
+   begin
+      return (USART_Regs.IMR and Interrupt) = Interrupt;
+   end Is_Interrupt_Enabled;
+
+   function USART_Base_Addr (USART_Periph : USART_Peripheral_Type)
+                            return System.Address is
+   begin
+      case USART_Periph is
+         when USART0 =>
+            return USART0_BASE;
+         when USART1 =>
+            return USART1_BASE;
+      end case;
+   end USART_Base_Addr;
+
+end SAM4S.USART;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-usart.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-usart.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-usart.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-usart.ads	2015-07-28 13:54:40.890238676 -0500
@@ -0,0 +1,243 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+with System;
+
+package SAM4S.USART is
+   pragma Preelaborate;
+
+   type USART_Peripheral_Type is (USART0, USART1);
+
+   type Clock_Divider_Type is new Unsigned_16;
+
+   --  SPI modes are selected through Configure_SPI_Mode.
+   type Mode_Type is (Normal, RS485, HW_Handshaking, Modem, ISO7816_T_0,
+                      ISO7816_T_1, IRDA);
+
+   type Clock_Select_Type is (MCK, MCK_DIV_8, SCK);
+
+   subtype Character_Length_Type is Positive range 5 .. 8;
+
+   type Sync_Mode_Select_Type is (Async, Sync);
+
+   type Parity_Type is (Even, Odd, Space, Mark, None, None_2, Multidrop);
+
+   type Stop_Bits_Type is (One, One_Point_Five, Two);
+
+   type Channel_Mode_Type is (Normal, Automatic, Local_Loopback,
+                              Remote_Loopback);
+
+   type Bit_Order_Type is (LSB_First, MSB_First);
+
+   type Clock_Out_Select_Type is (Not_Driven, Driven);
+
+   type Oversampling_Mode_Type is (X_16, X_8);
+
+   type Inhibit_NACK_Type is (Generated, Not_Generated);
+
+   type Disable_Successive_NACK_Type is (DSNACK_0, DSNACK_1);
+
+   type Inverted_Data_Type is (Not_Inverted, Inverted);
+
+   type Var_Sync_Type is (VAR_SYNC_0, VAR_SYNC_1);
+
+   type Max_Iteration_Type is (MAX_ITERATION_0, MAX_ITERATION_1);
+
+   type Filter_Type is (Not_Filtered, Filtered);
+
+   type Manchester_Enable_Type is (Manchester_Disabled, Manchester_Enabled);
+
+   type Manchester_Sync_Mode_Type is (MODSYNC_0, MODSYNC_1);
+
+   type Start_Frame_Delimiter_Type is (ONEBIT_0, ONEBIT_1);
+
+   --  SPI Mode types.
+   type SPI_Mode_Type is (Master, Slave);
+
+   type Clock_Polarity_Type is (Inactive_Low, Inactive_High);
+
+   type Clock_Phase_Type is (Change_On_Leading_Edge, Captured_On_Leading_Edge);
+
+   type Wait_Read_Type is (No_Wait, Wait);
+
+   type Interrupt_Type is new Unsigned_32;
+   Interrupt_RXRDY   : constant Interrupt_Type := 16#0000_0001#;
+   Interrupt_TXRDY   : constant Interrupt_Type := 16#0000_0002#;
+   Interrupt_ENDRX   : constant Interrupt_Type := 16#0000_0008#;
+   Interrupt_ENDTX   : constant Interrupt_Type := 16#0000_0010#;
+   Interrupt_OVRE    : constant Interrupt_Type := 16#0000_0020#;
+   Interrupt_FRAME   : constant Interrupt_Type := 16#0000_0040#;
+   Interrupt_PARE    : constant Interrupt_Type := 16#0000_0080#;
+   Interrupt_TXEMPTY : constant Interrupt_Type := 16#0000_0200#;
+   Interrupt_TXBUFE  : constant Interrupt_Type := 16#0000_0800#;
+   Interrupt_RXBUFF  : constant Interrupt_Type := 16#0000_1000#;
+   Interrupt_All     : constant Interrupt_Type := 16#0000_1AFB#;
+
+   procedure Configure (USART_Periph     : USART_Peripheral_Type;
+                        Clock_Divider    : Clock_Divider_Type;
+                        Mode             : Mode_Type;
+                        Clock_Select     : Clock_Select_Type;
+                        Character_Length : Character_Length_Type  := 8;
+                        Sync_Mode_Select : Sync_Mode_Select_Type  := Async;
+                        Parity           : Parity_Type            := None;
+                        Stop_Bits        : Stop_Bits_Type         := One;
+                        Channel_Mode     : Channel_Mode_Type      := Normal;
+                        Bit_Order        : Bit_Order_Type         := LSB_First;
+                        Clock_Out_Select : Clock_Out_Select_Type
+                          := Not_Driven;
+                        Oversampling     : Oversampling_Mode_Type := X_16);
+
+   procedure Configure_SPI_Mode (USART_Periph   : USART_Peripheral_Type;
+                                 Clock_Divider  : Clock_Divider_Type;
+                                 Clock_Select   : Clock_Select_Type;
+                                 Mode           : SPI_Mode_Type;
+                                 Clock_Phase    : Clock_Phase_Type;
+                                 Clock_Polarity : Clock_Polarity_Type;
+                                 Wait_Read      : Wait_Read_Type
+                                   := No_Wait);
+
+   function Is_Tx_Ready (USART_Periph : USART_Peripheral_Type) return Boolean;
+
+   function Is_Rx_Ready (USART_Periph : USART_Peripheral_Type) return Boolean;
+
+   function Is_End_Tx (USART_Periph : USART_Peripheral_Type) return Boolean;
+
+   function Is_End_Rx (USART_Periph : USART_Peripheral_Type) return Boolean;
+
+   function Is_Tx_Buffer_Empty (USART_Periph : USART_Peripheral_Type)
+                               return Boolean;
+
+   function Is_Rx_Buffer_Full (USART_Periph : USART_Peripheral_Type)
+                              return Boolean;
+
+   procedure Reset (USART_Periph : USART_Peripheral_Type);
+
+   procedure Enable (USART_Periph : USART_Peripheral_Type);
+
+   procedure Disable (USART_Periph : USART_Peripheral_Type);
+
+   function Byte_Get (USART_Periph : USART_Peripheral_Type) return Unsigned_8;
+
+   function Char_Get (USART_Periph : USART_Peripheral_Type) return Character;
+
+   procedure Char_Put (USART_Periph : USART_Peripheral_Type;
+                       Data         : Character);
+
+   procedure Byte_Put (USART_Periph : USART_Peripheral_Type;
+                       Data         : Unsigned_8);
+
+   procedure Enable_Interrupt (USART_Periph : USART_Peripheral_Type;
+                               Interrupt    : Interrupt_Type);
+
+   procedure Disable_Interrupt (USART_Periph : USART_Peripheral_Type;
+                                Interrupt    : Interrupt_Type);
+
+   function Is_Interrupt_Enabled (USART_Periph : USART_Peripheral_Type;
+                                  Interrupt    : Interrupt_Type)
+                                 return Boolean;
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_RSTRX   : constant CR_Type := 16#0000_0004#;
+   CR_RSTTX   : constant CR_Type := 16#0000_0008#;
+   CR_RXEN    : constant CR_Type := 16#0000_0010#;
+   CR_RXDIS   : constant CR_Type := 16#0000_0020#;
+   CR_TXEN    : constant CR_Type := 16#0000_0040#;
+   CR_TXDIS   : constant CR_Type := 16#0000_0080#;
+   CR_RSTSTA  : constant CR_Type := 16#0000_0100#;
+   CR_STTBRK  : constant CR_Type := 16#0000_0200#;
+   CR_STPBRK  : constant CR_Type := 16#0000_0400#;
+   CR_STTTO   : constant CR_Type := 16#0000_0800#;
+   CR_SENDA   : constant CR_Type := 16#0000_1000#;
+   CR_RSTIT   : constant CR_Type := 16#0000_2000#;
+   CR_RSTNACK : constant CR_Type := 16#0000_4000#;
+   CR_RETTO   : constant CR_Type := 16#0000_8000#;
+   CR_DTREN   : constant CR_Type := 16#0001_0000#;
+   CR_DTRDIS  : constant CR_Type := 16#0002_0000#;
+   CR_RTSEN   : constant CR_Type := 16#0004_0000#;
+   CR_RTSDIS  : constant CR_Type := 16#0008_0000#;
+   --  SPI Mode bit fields.
+   CR_CPHA    : constant CR_Type := 16#0000_0100#;
+   CR_CPOL    : constant CR_Type := 16#0001_0000#;
+   CR_WRDBT   : constant CR_Type := 16#0010_0000#;
+
+   type MR_Type is new Unsigned_32;
+   MR_MODE_NORMAL         : constant MR_Type := 16#0000_0000#;
+   MR_MODE_RS485          : constant MR_Type := 16#0000_0001#;
+   MR_MODE_HW_HANDSHAKING : constant MR_Type := 16#0000_0002#;
+   MR_MODE_MODEM          : constant MR_Type := 16#0000_0003#;
+   MR_MODE_ISO7816_T_0    : constant MR_Type := 16#0000_0004#;
+   MR_MODE_ISO7816_T_1    : constant MR_Type := 16#0000_0006#;
+   MR_MODE_IRDA           : constant MR_Type := 16#0000_0008#;
+   MR_MODE_SPI_MASTER     : constant MR_Type := 16#0000_000E#;
+   MR_MODE_SPI_SLAVE      : constant MR_Type := 16#0000_000F#;
+   MR_CLKS_MCK            : constant MR_Type := 16#0000_0000#;
+   MR_CLKS_DIV            : constant MR_Type := 16#0000_0010#;
+   MR_CLKS_SCK            : constant MR_Type := 16#0000_0030#;
+   MR_CHRL_5_BIT          : constant MR_Type := 16#0000_0000#;
+   MR_CHRL_6_BIT          : constant MR_Type := 16#0000_0040#;
+   MR_CHRL_7_BIT          : constant MR_Type := 16#0000_0080#;
+   MR_CHRL_8_BIT          : constant MR_Type := 16#0000_00C0#;
+   MR_CLKO                : constant MR_Type := 16#0004_0000#;
+
+   type CSR_Type is new Unsigned_32;
+   CSR_RXRDY   : constant CSR_Type := 16#0000_0001#;
+   CSR_TXRDY   : constant CSR_Type := 16#0000_0002#;
+   CSR_RXBRK   : constant CSR_Type := 16#0000_0004#;
+   CSR_ENDRX   : constant CSR_Type := 16#0000_0008#;
+   CSR_ENDTX   : constant CSR_Type := 16#0000_0010#;
+   CSR_OVRE    : constant CSR_Type := 16#0000_0020#;
+   CSR_FRAME   : constant CSR_Type := 16#0000_0040#;
+   CSR_PARE    : constant CSR_Type := 16#0000_0080#;
+   CSR_TIMEOUT : constant CSR_Type := 16#0000_0100#;
+   CSR_TXEMPTY : constant CSR_Type := 16#0000_0200#;
+   CSR_TXBUFE  : constant CSR_Type := 16#0000_0800#;
+   CSR_RXBUFF  : constant CSR_Type := 16#0000_1000#;
+
+   function USART_Base_Addr (USART_Periph : USART_Peripheral_Type)
+                            return System.Address;
+
+   type USART_Registers is record
+      CR          : CR_Type;        -- Control register
+      MR          : MR_Type;        -- Mode register
+      IER         : Interrupt_Type; -- Interrupt enable register
+      IDR         : Interrupt_Type; -- Interrupt disable register
+      IMR         : Interrupt_Type; -- Interrupt mask register
+      CSR         : CSR_Type;       -- Channel status register
+      RHR         : Unsigned_32;    -- Receive holding register
+      THR         : Unsigned_32;    -- Transmit holding register
+      BRGR        : Unsigned_32;    -- Baud rate generator register
+      RTOR        : Unsigned_32;    -- Receive time-out register
+      TTGR        : Unsigned_32;    -- Transmitter timeguard register
+   end record;
+
+end SAM4S.USART;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-wdt.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-wdt.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-wdt.adb	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-wdt.adb	2015-07-28 13:54:29.402441473 -0500
@@ -0,0 +1,68 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+package body SAM4S.WDT is
+   --  MR is a write-once register.  If the user attempts to write it twice, we
+   --  raise a Program_Error.
+   MR_Written : Boolean := False;
+
+   procedure Enable (Counter_Value : Counter_Value_Type;
+                     Delta_Value   : Delta_Value_Type) is
+      WDT_Regs : WDT_Registers with Address => WDT_BASE;
+   begin
+      if MR_Written then
+         raise Program_Error;
+      end if;
+
+      --  Note that writing MR restarts the watchdog counter.
+      WDT_Regs.MR := MR_Type (Counter_Value) or
+        MR_Type (Shift_Left (Delta_Value, 16)) or MR_WDRSTEN or MR_WDDBHLT;
+      MR_Written := True;
+   end Enable;
+
+   procedure Disable is
+      WDT_Regs : WDT_Registers with Address => WDT_BASE;
+   begin
+      if MR_Written then
+         raise Program_Error;
+      end if;
+
+      WDT_Regs.MR := MR_WDDIS;
+      MR_Written := True;
+   end Disable;
+
+   procedure Kick is
+      WDT_Regs : WDT_Registers with Address => WDT_BASE;
+   begin
+      WDT_Regs.CR := CR_KEY or CR_WDRSTT;
+   end Kick;
+
+end SAM4S.WDT;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-wdt.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-wdt.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/sam4s-wdt.ads	1969-12-31 18:00:00.000000000 -0600
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/sam4s-wdt.ads	2015-07-28 13:54:18.354636503 -0500
@@ -0,0 +1,79 @@
+------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
+--                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
+------------------------------------------------------------------------------
+with Interfaces; use Interfaces;
+
+package SAM4S.WDT is
+   pragma Preelaborate;
+
+   type Counter_Value_Type is new Unsigned_32 range 0 .. 16#0000_0FFF#;
+   type Delta_Value_Type is new Unsigned_32 range 0 .. 16#0000_0FFF#;
+
+   ---------------------------------------------------------------------------
+   --  Enable
+   --
+   --  The counter value sets the number of slow clocks before the watchdog
+   --  timer expires and triggers a reset.  The watchdog must be restarted
+   --  when the timer is between 0 and the delta value, or a watchdog error
+   --  will occur.  To be able to kick the dog at any time, set the delta
+   --  value greater than or equal to the counter value.
+   ---------------------------------------------------------------------------
+   procedure Enable (Counter_Value : Counter_Value_Type;
+                     Delta_Value   : Delta_Value_Type);
+
+   procedure Disable;
+
+   procedure Kick;
+
+private
+   type CR_Type is new Unsigned_32;
+   CR_WDRSTT           : constant CR_Type := 16#0000_0001#;
+   CR_KEY              : constant CR_Type := 16#A500_0000#;
+
+   type MR_Type is new Unsigned_32;
+   MR_WFDIEN           : constant MR_Type := 16#0000_1000#;
+   MR_WDRSTEN          : constant MR_Type := 16#0000_2000#;
+   MR_WDRPROC          : constant MR_Type := 16#0000_4000#;
+   MR_WDDIS            : constant MR_Type := 16#0000_8000#;
+   MR_WDDBHLT          : constant MR_Type := 16#1000_0000#;
+   MR_WDIDLEHLT        : constant MR_Type := 16#2000_0000#;
+
+   type SR_Type is new Unsigned_32;
+   SR_WDUNF            : constant SR_Type := 16#0000_0001#;
+   SR_WDERR            : constant SR_Type := 16#0000_0002#;
+
+   type WDT_Registers is record
+      CR            : CR_Type;       -- Control register
+      MR            : MR_Type;       -- Mode register
+      SR            : SR_Type;       -- Status register
+   end record;
+
+end SAM4S.WDT;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/setup_pll.adb bb-runtimes-gpl-2015-src-patched/arm/sam4s/setup_pll.adb
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/setup_pll.adb	2015-04-30 05:36:37.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/setup_pll.adb	2015-07-28 13:53:39.843316354 -0500
@@ -1,247 +1,69 @@
 ------------------------------------------------------------------------------
+--  Copyright (c) 2015, Patrick Noffke                                      --
+--  All rights reserved.                                                    --
 --                                                                          --
---                             GNAT EXAMPLE                                 --
---                                                                          --
---                    Copyright (C) 2013-2014, AdaCore                      --
---                                                                          --
--- GNAT is free software;  you can  redistribute it  and/or modify it under --
--- terms of the  GNU General Public License as published  by the Free Soft- --
--- ware  Foundation;  either version 3,  or (at your option) any later ver- --
--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
---                                                                          --
---                                                                          --
---                                                                          --
---                                                                          --
---                                                                          --
--- You should have received a copy of the GNU General Public License and    --
--- a copy of the GCC Runtime Library Exception along with this program;     --
--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
--- <http://www.gnu.org/licenses/>.                                          --
---                                                                          --
--- GNAT was originally developed  by the GNAT team at  New York University. --
--- Extensive contributions were provided by Ada Core Technologies Inc.      --
---                                                                          --
+--  Redistribution and use in source and binary forms, with or without      --
+--  modification, are permitted provided that the following conditions are  --
+--  met:                                                                    --
+--                                                                          --
+--  1. Redistributions of source code must retain the above copyright       --
+--  notice, this list of conditions and the following disclaimer.           --
+--                                                                          --
+--  2. Redistributions in binary form must reproduce the above copyright    --
+--  notice, this list of conditions and the following disclaimer in the     --
+--  documentation and/or other materials provided with the distribution.    --
+--                                                                          --
+--  3. Neither the name of the copyright holder nor the names of its        --
+--  contributors may be used to endorse or promote products derived from    --
+--  this software without specific prior written permission.                --
+--                                                                          --
+--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS --
+--  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   --
+--  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         --
+--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
+--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  --
+--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
+--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
+--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
+--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
+--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
+--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
 ------------------------------------------------------------------------------
+pragma Ada_2012;
 pragma Restrictions (No_Elaboration_Code);
---  This subprogram is called before elaboration
 
-pragma Warnings (Off);
-with System.SAM4S; use System.SAM4S;
-pragma Warnings (On);
+with SAM4S; use SAM4S;
+with SAM4S.PMC; use SAM4S.PMC;
+with SAM4S.PIO;
+with SAM4S.UART;
+with SAM4S.Trace;
 
 procedure Setup_Pll is
-begin
-   --  Main crystal is 12 Mhz and PLLA is set to x10. So main clock is 120 Mhz.
 
-   --  5 wait states for the flash
-   EFC0.EEFC_FMR := 5 * EEFC_FMR.FWS;
+   procedure Initialize_UART0 (Baud_Rate : SAM4S.UART.Baud_Rate_Type);
+
+   -----------------------
+   -- Initialize_UART1  --
+   -----------------------
+
+   procedure Initialize_UART0 (Baud_Rate : SAM4S.UART.Baud_Rate_Type) is
+   begin
+      SAM4S.PMC.Peripheral_Clock_Enable (ID_UART0);
+      SAM4S.PMC.Peripheral_Clock_Enable (ID_PIOA);
+      SAM4S.PIO.Configure_Pin (SAM4S.PIO.PA9, SAM4S.PIO.Periph_A);
+      SAM4S.PIO.Configure_Pin (SAM4S.PIO.PA10, SAM4S.PIO.Periph_A);
+
+      SAM4S.UART.Configure (SAM4S.UART.UART0, Baud_Rate);
+      SAM4S.UART.Enable (SAM4S.UART.UART0);
+   end Initialize_UART0;
+
+begin
+   --  Switch MCK to use PLLA with XTAL as source.
+   SAM4S.PMC.Switch_To_Main_Xtal;
 
-   --  28.2.13 Programming Sequence
+   SAM4S.PMC.Switch_To_Main_PLL;
 
-   --  1. Enabling the Main Oscillator:
+   SAM4S.Trace.Initialize;
 
-   --  The main oscillator is enabled by setting the MOSCXTEN field in
-   --  the Main Oscillator Register (CKGR_MOR). The user can define a
-   --  start-up time. This can be achieved by writing a value in the
-   --  MOSCXTST field in CKGR_MOR. Once this register has been
-   --  correctly configured, the user must wait for MOSCXTS field in
-   --  the PMC_SR register to be set. This can be done either by
-   --  polling the status register, or by waiting the interrupt line
-   --  to be raised if the associated inter- rupt to MOSCXTS has been
-   --  enabled in the PMC_IER register.
-
-   PMC.CKGR_MOR := (PMC.CKGR_MOR and not CKGR_MOR.MOSCXTBY)
-     or CKGR_MOR.KEY or CKGR_MOR.MOSCXTEN or 62 * CKGR_MOR.MOSCXTST;
-
-   --  Wait until the xtal stabilize
-   while (PMC.PMC_SR and PMC_SR.MOSCXTS) = 0 loop
-      null;
-   end loop;
-
-   --  Select the xtal (must already be true, but doesn't harm)
-   PMC.CKGR_MOR := PMC.CKGR_MOR or CKGR_MOR.KEY or CKGR_MOR.MOSCSEL;
-
-   --  2. Checking the Main Oscillator Frequency (Optional):
-
-   --  In some situations the user may need an accurate measure of the
-   --  main clock frequency. This measure can be accomplished via the
-   --  Main Clock Frequency Register (CKGR_MCFR).  Once the MAINFRDY
-   --  field is set in CKGR_MCFR, the user may read the MAINF field in
-   --  CKGR_MCFR by performing another CKGR_MCFR read access. This
-   --  provides the number of main clock cycles within sixteen slow
-   --  clock cycles.
-
-   null;
-
-   --  3. Setting PLL and Divider:
-
-   --  All parameters needed to configure PLLA and the divider are
-   --  located in CKGR_PLLAxR.
-
-   --  The DIV field is used to control the divider itself. It must be
-   --  set to 1 when PLL is used. By default, DIV parameter is set to
-   --  0 which means that the divider is turned off.
-
-   --  The MUL field is the PLL multiplier factor. This parameter can
-   --  be programmed between 0 and 80. If MUL is set to 0, PLL will be
-   --  turned off, otherwise the PLL output frequency is PLL input
-   --  frequency multiplied by (MUL + 1).
-
-   --  The PLLCOUNT field specifies the number of slow clock cycles
-   --  before the LOCK bit is set in PMC_SR, after CKGR_PLLA(B)R has
-   --  been written.
-
-   --  First disable
-   PMC.CKGR_PLLAR := CKGR_PLLxR.ONE;
-
-   PMC.CKGR_PLLAR := CKGR_PLLxR.ONE
-     or 1 * CKGR_PLLxR.DIV
-     + (10 - 1) * CKGR_PLLxR.MUL
-     + 16#3f# * CKGR_PLLxR.PLLCOUNT;
-
-   --  Once the CKGR_PLL register has been written, the user must wait
-   --  for the LOCK bit to be set in the PMC_SR. This can be done
-   --  either by polling the status register or by waiting the
-   --  interrupt line to be raised if the associated interrupt to LOCK
-   --  has been enabled in PMC_IER. All parameters in CKGR_PLLA(B)R
-   --  can be programmed in a single write operation. If at some stage
-   --  one of the following parameters, MUL or DIV is modified, the
-   --  LOCK bit will go low to indicate that PLL is not ready
-   --  yet. When PLL is locked, LOCK will be set again. The user is
-   --  constrained to wait for LOCK bit to be set before using the PLL
-   --  output clock.
-
-   while (PMC.PMC_SR and PMC_SR.LOCKA) = 0 loop
-      null;
-   end loop;
-
-   --  4. Selection of Master Clock and Processor Clock
-
-   --  The Master Clock and the Processor Clock are configurable via
-   --  the Master Clock Register (PMC_MCKR).
-
-   --  The CSS field is used to select the Master Clock divider
-   --  source. By default, the selected clock source is main clock.
-
-   --  The PRES field is used to control the Master Clock
-   --  prescaler. The user can choose between different values (1, 2,
-   --  3, 4, 8, 16, 32, 64). Master Clock output is prescaler input
-   --  divided by PRES parameter. By default, PRES parameter is set to
-   --  1 which means that master clock is equal to main clock.
-
-   --  Once PMC_MCKR has been written, the user must wait for the
-   --  MCKRDY bit to be set in PMC_SR. This can be done either by
-   --  polling the status register or by waiting for the interrupt
-   --  line to be raised if the associated interrupt to MCKRDY has
-   --  been enabled in the PMC_IER register.
-
-   --  The PMC_MCKR must not be programmed in a single write
-   --  operation. The preferred programming sequence for PMC_MCKR is
-   --  as follows:
-
-   --  * If a new value for CSS field corresponds to PLL Clock,
-   --    * Program the PRES field in PMC_MCKR.
-   --    * Wait for the MCKRDY bit to be set in PMC_SR.
-   --    * Program the CSS field in PMC_MCKR.
-   --    * Wait for the MCKRDY bit to be set in PMC_SR.
-   --  * If a new value for CSS field corresponds to Main Clock
-   --    or Slow Clock,
-   --    * Program the CSS field in PMC_MCKR.
-   --    * Wait for the MCKRDY bit to be set in the PMC_SR.
-   --    * Program the PRES field in PMC_MCKR.
-   --    * Wait for the MCKRDY bit to be set in PMC_SR.
-
-   PMC.PMC_MCKR := (PMC.PMC_MCKR and not PMC_MCKR.PRES_Mask)
-     or PMC_MCKR.CLK_1;
-
-   while (PMC.PMC_SR and PMC_SR.MCKRDY) = 0 loop
-      null;
-   end loop;
-
-   PMC.PMC_MCKR := (PMC.PMC_MCKR and not PMC_MCKR.CSS_Mask)
-     or PMC_MCKR.PLLA_CLK;
-
-   while (PMC.PMC_SR and PMC_SR.MCKRDY) = 0 loop
-      null;
-   end loop;
-
-   --  If at some stage one of the following parameters, CSS or PRES
-   --  is modified, the MCKRDY bit will go low to indicate that the
-   --  Master Clock and the Processor Clock are not ready yet. The
-   --  user must wait for MCKRDY bit to be set again before using the
-   --  Master and Processor Clocks.
-
-   --  Note: IF PLLx clock was selected as the Master Clock and the
-   --  user decides to modify it by writing in CKGR_PLLR, the MCKRDY
-   --  flag will go low while PLL is unlocked. Once PLL is locked
-   --  again, LOCK goes high and MCKRDY is set.
-
-   --  While PLL is unlocked, the Master Clock selection is
-   --  automatically changed to Slow Clock. For further information,
-   --  see Section 28.2.14.2 “Clock Switching Waveforms” on page 467.
-
-   --  Code Example:
-   --        write_register(PMC_MCKR,0x00000001)
-   --        wait (MCKRDY=1)
-   --        write_register(PMC_MCKR,0x00000011)
-   --        wait (MCKRDY=1)
-
-   --  The Master Clock is main clock divided by 2.
-   --  The Processor Clock is the Master Clock.
-
-   --  5. Selection of Programmable Clocks
-
-   --  Programmable clocks are controlled via registers, PMC_SCER,
-   --  PMC_SCDR and PMC_SCSR.
-
-   --  Programmable clocks can be enabled and/or disabled via PMC_SCER
-   --  and PMC_SCDR. 3 Programmable clocks can be enabled or
-   --  disabled. The PMC_SCSR provides a clear indication as to which
-   --  Programmable clock is enabled. By default all Programmable
-   --  clocks are disabled.
-
-   --  Programmable Clock Registers (PMC_PCKx) are used to configure
-   --  Programmable clocks.
-
-   --  The CSS field is used to select the Programmable clock divider
-   --  source. Four clock options are available: main clock, slow
-   --  clock, PLLACK, PLLBCK. By default, the clock source selected is
-   --  slow clock.
-
-   --  The PRES field is used to control the Programmable clock
-   --  prescaler. It is possible to choose between different values
-   --  (1, 2, 4, 8, 16, 32, 64). Programmable clock output is
-   --  prescaler input divided by PRES parameter. By default, the PRES
-   --  parameter is set to 0 which means that master clock is equal to
-   --  slow clock.
-
-   --  Once PMC_PCKx has been programmed, The corresponding
-   --  Programmable clock must be enabled and the user is constrained
-   --  to wait for the PCKRDYx bit to be set in PMC_SR. This can be
-   --  done either by polling the status register or by waiting the
-   --  interrupt line to be raised, if the associated interrupt to
-   --  PCKRDYx has been enabled in the PMC_IER register. All parameters in
-   --  PMC_PCKx can be programmed in a single write operation.
-
-   --  If the CSS and PRES parameters are to be modified, the
-   --  corresponding Programmable clock must be disabled first. The
-   --  parameters can then be modified. Once this has been done, the
-   --  user must re-enable the Programmable clock and wait for the
-   --  PCKRDYx bit to be set.
-
-   null;
-
-   --  6. Enabling Peripheral Clocks
-
-   --  Once all of the previous steps have been completed, the
-   --  peripheral clocks can be enabled and/or disabled via registers
-   --  PMC_PCER0, PMC_PCER, PMC_PCDR0 and PMC_PCDR.
-
-   null;
-
-   --  Disable watchdog.  The register can be written once, so this file has
-   --  to be modified to enable watchdog.
-   WDT.WDT_MR := WDT_MR.WDDIS;
+   Initialize_UART0 (115_200);
 end Setup_Pll;
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/setup_pll.ads bb-runtimes-gpl-2015-src-patched/arm/sam4s/setup_pll.ads
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/setup_pll.ads	2015-04-30 05:36:37.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/setup_pll.ads	1969-12-31 18:00:00.000000000 -0600
@@ -1,33 +0,0 @@
-------------------------------------------------------------------------------
---                                                                          --
---                             GNAT EXAMPLE                                 --
---                                                                          --
---                    Copyright (C) 2013-2014, AdaCore                      --
---                                                                          --
--- GNAT is free software;  you can  redistribute it  and/or modify it under --
--- terms of the  GNU General Public License as published  by the Free Soft- --
--- ware  Foundation;  either version 3,  or (at your option) any later ver- --
--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
---                                                                          --
---                                                                          --
---                                                                          --
---                                                                          --
---                                                                          --
--- You should have received a copy of the GNU General Public License and    --
--- a copy of the GCC Runtime Library Exception along with this program;     --
--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
--- <http://www.gnu.org/licenses/>.                                          --
---                                                                          --
--- GNAT was originally developed  by the GNAT team at  New York University. --
--- Extensive contributions were provided by Ada Core Technologies Inc.      --
---                                                                          --
-------------------------------------------------------------------------------
-
-procedure Setup_Pll;
---  Initialize the PLL
-
-pragma No_Elaboration_Code_All (Setup_Pll);
---  This code is executed before elaboration, so better not need elaboration
---  code.
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/start-ram.S bb-runtimes-gpl-2015-src-patched/arm/sam4s/start-ram.S
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/start-ram.S	2014-09-08 07:23:49.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/start-ram.S	2015-07-28 13:53:15.042754164 -0500
@@ -1,101 +1,54 @@
-## -*- asm -*- ##############################################################
-#                                                                           #
-#                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                  #
-#                                                                           #
-#                                 S T A R T                                 #
-#                                                                           #
-#                               Assembly File                               #
-#                                                                           #
-#                      Copyright (C) 2012-2013 AdaCore                      #
-#                                                                           #
-#  GNAT is free software;  you can  redistribute it  and/or modify it under #
-#  terms of the  GNU General Public License as published  by the Free Soft- #
-#  ware  Foundation;  either version 3,  or (at your option) any later ver- #
-#  sion.  GNAT is distributed in the hope that it will be useful, but WITH- #
-#  OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY #
-#  or FITNESS FOR A PARTICULAR PURPOSE.                                     #
-#                                                                           #
-#  As a special exception under Section 7 of GPL version 3, you are granted #
-#  additional permissions described in the GCC Runtime Library Exception,   #
-#  version 3.1, as published by the Free Software Foundation.               #
-#                                                                           #
-#  You should have received a copy of the GNU General Public License and    #
-#  a copy of the GCC Runtime Library Exception along with this program;     #
-#  see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    #
-#  <http://www.gnu.org/licenses/>.                                          #
-#                                                                           #
-#############################################################################
+############################################################################
+#  Copyright (c) 2015, Patrick Noffke                                      #
+#  All rights reserved.                                                    #
+#                                                                          #
+#  Redistribution and use in source and binary forms, with or without      #
+#  modification, are permitted provided that the following conditions are  #
+#  met:                                                                    #
+#                                                                          #
+#  1. Redistributions of source code must retain the above copyright       #
+#  notice, this list of conditions and the following disclaimer.           #
+#                                                                          #
+#  2. Redistributions in binary form must reproduce the above copyright    #
+#  notice, this list of conditions and the following disclaimer in the     #
+#  documentation and/or other materials provided with the distribution.    #
+#                                                                          #
+#  3. Neither the name of the copyright holder nor the names of its        #
+#  contributors may be used to endorse or promote products derived from    #
+#  this software without specific prior written permission.                #
+#                                                                          #
+#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS #
+#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   #
+#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         #
+#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      #
+#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  #
+#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        #
+#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   #
+#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   #
+#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     #
+#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   #
+#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    #
+############################################################################
 
 	.syntax unified
 	.cpu cortex-m4
 	.thumb
 
-	/* This is the initial vector table and also the one that is used by
-	   the zfp runtime. Ravenscar runtimes install its own table (using
-	   VTOR register) defined in handler.S.  */
 	.section .vectors,"a"
-	.globl	__vectors0
 __vectors0:
-	b.w	_start_ram	/* stack top address */
-	.word	_start_ram	/* 1 Reset */
-	.word   hang		/* 2 NMI */
-	.word   hang		/* 3 HardFault */
-	.word   hang		/* 4 MemManage */
-	.word	hang		/* 5 BusFault  */
-	.word	hang		/* 6 UsageFault */
-	.word	0, 0, 0, 0	/* 7, 8, 9, 10 : Reserved */
-	.word	hang		/* 11 SVC_Handler  */
-	.word	hang		/* 12 DebugMon */
-	.word	0		/* 13 Reserved  */
-	.word	hang		/* 14 PendSV */
-	.word	SysTick_Handler
-
-	.word	SUPC_IrqHandler		/* 0  Supply Controller */
-	.word	RSTC_IrqHandler		/* 1  Reset Controller */
-	.word	RTC_IrqHandler		/* 2  Real Time Clock */
-	.word	RTT_IrqHandler		/* 3  Real Time Timer */
-	.word	WDT_IrqHandler		/* 4  Watchdog Timer */
-	.word	PMC_IrqHandler		/* 5  PMC */
-	.word	EEFC_IrqHandler		/* 6  EEFC */
-	.word	IrqHandlerNotUsed	/* 7  Reserved */
-	.word	UART0_IrqHandler	/* 8  UART0 */
-	.word	UART1_IrqHandler	/* 9  UART1 */
-	.word	SMC_IrqHandler		/* 10 SMC */
-	.word	PIOA_IrqHandler		/* 11 Parallel IO Controller A */
-	.word	PIOB_IrqHandler		/* 12 Parallel IO Controller B */
-	.word	PIOC_IrqHandler		/* 13 Parallel IO Controller C */
-	.word	USART0_IrqHandler	/* 14 USART 0 */
-	.word	USART1_IrqHandler	/* 15 USART 1 */
-	.word	USART2_IrqHandler	/* 16 USART 2 */
-	.word	IrqHandlerNotUsed	/* 17 Reserved */
-	.word	MCI_IrqHandler		/* 18 MCI */
-	.word	TWI0_IrqHandler		/* 19 TWI 0 */
-	.word	TWI1_IrqHandler		/* 20 TWI 1 */
-	.word	SPI_IrqHandler		/* 21 SPI */
-	.word	SSC_IrqHandler		/* 22 SSC */
-	.word	TC0_IrqHandler		/* 23 Timer Counter 0 */
-	.word	TC1_IrqHandler		/* 24 Timer Counter 1 */
-	.word	TC2_IrqHandler		/* 25 Timer Counter 2 */
-	.word	TC3_IrqHandler		/* 26 Timer Counter 3 */
-	.word	TC4_IrqHandler		/* 27 Timer Counter 4 */
-	.word	TC5_IrqHandler		/* 28 Timer Counter 5 */
-	.word	ADC_IrqHandler		/* 29 ADC controller */
-	.word	DAC_IrqHandler		/* 30 DAC controller */
-	.word	PWM_IrqHandler		/* 31 PWM */
-	.word	CRCCU_IrqHandler	/* 32 CRC Calculation Unit */
-	.word	ACC_IrqHandler		/* 33 Analog Comparator */
-	.word	USBD_IrqHandler		/* 34 USB Device Port */
-	.word	IrqHandlerNotUsed	/* 35 not used */
+	.word   __stack_end /* stack top address */
+	.word   _start_ram  /* 1 Reset */
+	.word   hang        /* 2 NMI */
+	.word   hang        /* 3 HardFault */
+	.word   hang        /* 4 MemManage */
 
 	.text
 
 	.thumb_func
 	.globl _start_ram
 _start_ram:
-	/* Set stack */
-	movw	r0,#:lower16:__stack_end
-	movt	r0,#:upper16:__stack_end
-	mov	sp,r0
+	/* Init stack */
+	ldr	sp,.LinitSp
 
 	/* Clear .bss */
 	movw	r0,#:lower16:__bss_start
@@ -113,11 +66,7 @@ _start_ram:
 
 	bl	exit
 
-	.global __aeabi_unwind_cpp_pr0
-	.global __aeabi_unwind_cpp_pr1
-	.global __aeabi_unwind_cpp_pr2
-	.thumb_func
-__aeabi_unwind_cpp_pr0:
-__aeabi_unwind_cpp_pr1:
-__aeabi_unwind_cpp_pr2:
 hang:   b .
+
+.LinitSp:
+	.word __stack_end
diff -rupN bb-runtimes-gpl-2015-src-orig/arm/sam4s/start-rom.S bb-runtimes-gpl-2015-src-patched/arm/sam4s/start-rom.S
--- bb-runtimes-gpl-2015-src-orig/arm/sam4s/start-rom.S	2014-09-08 07:23:49.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/arm/sam4s/start-rom.S	2015-07-28 13:52:55.788094072 -0500
@@ -1,30 +1,34 @@
-## -*- asm -*- ##############################################################
-#                                                                           #
-#                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                  #
-#                                                                           #
-#                                 S T A R T                                 #
-#                                                                           #
-#                               Assembly File                               #
-#                                                                           #
-#                      Copyright (C) 2012-2013 AdaCore                      #
-#                                                                           #
-#  GNAT is free software;  you can  redistribute it  and/or modify it under #
-#  terms of the  GNU General Public License as published  by the Free Soft- #
-#  ware  Foundation;  either version 3,  or (at your option) any later ver- #
-#  sion.  GNAT is distributed in the hope that it will be useful, but WITH- #
-#  OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY #
-#  or FITNESS FOR A PARTICULAR PURPOSE.                                     #
-#                                                                           #
-#  As a special exception under Section 7 of GPL version 3, you are granted #
-#  additional permissions described in the GCC Runtime Library Exception,   #
-#  version 3.1, as published by the Free Software Foundation.               #
-#                                                                           #
-#  You should have received a copy of the GNU General Public License and    #
-#  a copy of the GCC Runtime Library Exception along with this program;     #
-#  see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    #
-#  <http://www.gnu.org/licenses/>.                                          #
-#                                                                           #
-#############################################################################
+############################################################################
+#  Copyright (c) 2015, Patrick Noffke                                      #
+#  All rights reserved.                                                    #
+#                                                                          #
+#  Redistribution and use in source and binary forms, with or without      #
+#  modification, are permitted provided that the following conditions are  #
+#  met:                                                                    #
+#                                                                          #
+#  1. Redistributions of source code must retain the above copyright       #
+#  notice, this list of conditions and the following disclaimer.           #
+#                                                                          #
+#  2. Redistributions in binary form must reproduce the above copyright    #
+#  notice, this list of conditions and the following disclaimer in the     #
+#  documentation and/or other materials provided with the distribution.    #
+#                                                                          #
+#  3. Neither the name of the copyright holder nor the names of its        #
+#  contributors may be used to endorse or promote products derived from    #
+#  this software without specific prior written permission.                #
+#                                                                          #
+#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS #
+#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   #
+#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A         #
+#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      #
+#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  #
+#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        #
+#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   #
+#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   #
+#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     #
+#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   #
+#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    #
+############################################################################
 
 	.syntax unified
 	.cpu cortex-m4
@@ -75,6 +79,7 @@ _start_rom:
 
 	bl	exit
 
+/*
 	.global __aeabi_unwind_cpp_pr0
 	.global __aeabi_unwind_cpp_pr1
 	.global __aeabi_unwind_cpp_pr2
@@ -85,5 +90,6 @@ __aeabi_unwind_cpp_pr1:
 	.thumb_func
 __aeabi_unwind_cpp_pr2:
 	.thumb_func
+*/
 hang:
 	b .
diff -rupN bb-runtimes-gpl-2015-src-orig/build-all.sh bb-runtimes-gpl-2015-src-patched/build-all.sh
--- bb-runtimes-gpl-2015-src-orig/build-all.sh	2015-04-13 02:52:19.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/build-all.sh	2015-07-15 08:43:15.943096846 -0500
@@ -311,6 +311,11 @@ build_sfp_sam4s()
     do_ravenscar arm-eabi ravenscar-sfp/sam4s
 }
 
+build_full_sam4s()
+{
+    do_ravenscar arm-eabi ravenscar-full/sam4s
+}
+
 build_zfp_visium()
 {
     do_zfp visium-elf zfp/mcm
@@ -438,6 +443,7 @@ if [ $# -eq 0 ]; then
   build_rts arm-eabi ravenscar-sfp/stm32f4
   build_rts arm-eabi ravenscar-sfp/tms570
   build_rts arm-eabi ravenscar-full/stm32f4
+  build_rts arm-eabi ravenscar-full/sam4s
   build_rts arm-eabi ravenscar-full/tms570
   build_rts arm-eabi ravenscar-full/tms570-sci
 
@@ -580,6 +586,7 @@ else
               case $opt in
                   zfp)  build_zfp_sam4s ;;
                   sfp)  build_sfp_sam4s ;;
+                  full) build_full_sam4s ;;
                   *) echo "Unknown command $opt for target $target"; exit 2;;
               esac
               ;;
diff -rupN bb-runtimes-gpl-2015-src-orig/build-rts.sh bb-runtimes-gpl-2015-src-patched/build-rts.sh
--- bb-runtimes-gpl-2015-src-orig/build-rts.sh	2015-04-17 09:23:51.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/build-rts.sh	2015-07-15 11:20:38.072871715 -0500
@@ -268,10 +268,35 @@ sam4s_arch_files="arm/sam4s/sam4s-rom.ld
                   arm/sam4s/sam4s-samba.ld
                   arm/sam4s/start-rom.S
                   arm/sam4s/start-ram.S
-                  arm/sam4s/setup_pll.ads
-                  arm/sam4s/setup_pll.adb"
+                  arm/sam4s/sam4s.ads
+                  arm/sam4s/sam4s-dacc.ads
+                  arm/sam4s/sam4s-dacc.adb
+                  arm/sam4s/sam4s-eefc.ads
+                  arm/sam4s/sam4s-eefc.adb
+                  arm/sam4s/sam4s-pdc.ads
+                  arm/sam4s/sam4s-pdc.adb
+                  arm/sam4s/sam4s-pio.ads
+                  arm/sam4s/sam4s-pio.adb
+                  arm/sam4s/sam4s-pmc.ads
+                  arm/sam4s/sam4s-pmc.adb
+                  arm/sam4s/sam4s-pwm.ads
+                  arm/sam4s/sam4s-pwm.adb
+                  arm/sam4s/setup_pll.adb
+                  arm/sam4s/sam4s-spi.ads
+                  arm/sam4s/sam4s-spi.adb
+                  arm/sam4s/sam4s-trace.ads
+                  arm/sam4s/sam4s-trace.adb
+                  arm/sam4s/sam4s-twi.ads
+                  arm/sam4s/sam4s-twi.adb
+                  arm/sam4s/sam4s-uart.ads
+                  arm/sam4s/sam4s-uart.adb
+                  arm/sam4s/sam4s-usart.ads
+                  arm/sam4s/sam4s-usart.adb
+                  arm/sam4s/sam4s-wdt.ads
+                  arm/sam4s/sam4s-wdt.adb"
 
 cortexm4_raven_files="arm/stm32f4/handler.S"
+sam4s_raven_files="arm/sam4s/handler.S"
 
 # Create directories.
 mkdir $objdir
@@ -1119,10 +1144,12 @@ case $config in
         copy $PWD/src/runtime_build.gpr $objdir/runtime_build.gpr
         ;;
     "ravenscar-sfp/sam4s")
-        arch_files="$sam4s_arch_files $cortexm4_raven_files"
+        arch_files="$sam4s_arch_files $sam4s_raven_files"
         extra_gnat_files="$extra_gnat_files
                           $textio_src
-                          s-macres.adb s-macres.ads s-sam4s.ads"
+                          s-macres.adb s-macres.ads
+                          a-stream.ads a-stream.adb a-ioexce.ads
+                          s-stratt.ads s-stratt.adb a-tgdico.ads"
         extra_target_pairs="$extra_target_pairs
                             a-intnam.ads:a-intnam-xi-sam4s.ads
                             system.ads:system-xi-cortexm4-sfp.ads
@@ -1139,6 +1166,32 @@ case $config in
         copy $PWD/src/runtime_build.gpr $objdir/runtime_build.gpr
         copy $PWD/src/ravenscar_build.gpr $objdir/ravenscar_build.gpr
         ;;
+    "ravenscar-full/sam4s")
+        discarded_sources="s-sssita.ads s-sssita.adb"
+        arch_files="$sam4s_arch_files $sam4s_raven_files"
+        extra_gnat_files="$extra_gnat_files
+                          $textio_src $libc_files $libm_files $zcx_files
+                          s-macres.ads s-macres.adb a-tgdico.ads"
+
+        extra_target_pairs="$extra_target_pairs
+                            a-intnam.ads:a-intnam-xi-sam4s.ads
+                            system.ads:system-xi-cortexm4-full.ads
+                            s-macres.adb:s-macres-cortexm3.adb
+                            s-textio.adb:s-textio-sam4s.adb
+                            s-textio.ads:s-textio-zfp.ads
+                            s-bbcppr.adb:s-bbcppr-armv7m.adb
+                            s-bbpara.ads:s-bbpara-sam4s.ads
+                            s-bbbosu.adb:s-bbbosu-armv7m.adb
+                            s-parame.ads:s-parame-xi-small.ads
+                            s-traceb.adb:s-traceb-xi-armeabi.adb
+                            $libc_pairs
+                            $zcx_arm_pairs
+                            $libm_fpu_pairs
+                            $textio_pairs"
+        copy $PWD/arm/$config_arch/runtime.xml $objdir/runtime.xml
+        copy $PWD/src/runtime_build.gpr $objdir/runtime_build.gpr
+	zcx_copy
+        ;;
     "zfp/erc32" \
   | "zfp/leon"  \
   | "zfp/leon3" \
diff -rupN bb-runtimes-gpl-2015-src-orig/examples/tasks-sfp/tasking.adb bb-runtimes-gpl-2015-src-patched/examples/tasks-sfp/tasking.adb
--- bb-runtimes-gpl-2015-src-orig/examples/tasks-sfp/tasking.adb	2015-04-30 05:36:37.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/examples/tasks-sfp/tasking.adb	2015-07-15 10:06:35.276725283 -0500
@@ -49,7 +49,7 @@ package body Tasking is
       end loop;
    end Wait_Forever;
 
-   List : array (1 .. 10) of Task_Control_Container;
+   List : array (1 .. 2) of Task_Control_Container;
 
    procedure Last_Chance_Handler (Msg : System.Address; Line : Integer) is
    begin
diff -rupN bb-runtimes-gpl-2015-src-orig/Makefile bb-runtimes-gpl-2015-src-patched/Makefile
--- bb-runtimes-gpl-2015-src-orig/Makefile	2015-04-30 04:33:15.000000000 -0500
+++ bb-runtimes-gpl-2015-src-patched/Makefile	2015-07-15 09:32:24.799359796 -0500
@@ -37,6 +37,10 @@ ifeq ($(TARGET), arm-eabi)
     RTS_LIST=ravenscar-sfp-stm32f4 ravenscar-full-stm32f4
 endif
 
+ifeq ($(TARGET), arm-eabi)
+    RTS_LIST=ravenscar-sfp-sam4s ravenscar-full-sam4s
+endif
+
 ifeq ($(TARGET), leon-elf)
     RTS_LIST=zfp-leon ravenscar-sfp-leon ravenscar-full-leon
 endif
